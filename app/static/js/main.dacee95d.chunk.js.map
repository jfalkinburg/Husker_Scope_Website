{"version":3,"sources":["components/Menu.tsx","State.tsx","utils/MathUtils.tsx","components/FunctionGeneratorChannel.tsx","components/Canvas.js","components/WakeLock.tsx","components/FunctionGeneratorAudio.tsx","utils/FrequencyUtils.tsx","pages/FunctionGenerator.tsx","components/DrawGraph.js","components/triggers.js","components/cursors.js","components/exportCSV.js","components/DrawWave.js","pages/OScope.tsx","pages/AMFM.tsx","pages/SpectrumAnalyzer.tsx","pages/LogicAnalyzer.tsx","pages/Tutorial.tsx","pages/About.tsx","App.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx","../node_modules/@ionic/core/dist/esm-es5 lazy /^/.//.*/.entry/.js$/ groupOptions: {} namespace object","../node_modules/ionicons/dist/esm-es5 lazy /^/.//.*/.entry/.js$/ groupOptions: {} namespace object"],"names":["appPages","title","url","iosIcon","mailOutline","mdIcon","mailSharp","paperPlaneOutline","paperPlaneSharp","Menu","location","useLocation","contentId","type","id","mode","map","appPage","index","autoHide","className","pathname","routerLink","routerDirection","lines","detail","class","src","process","defaultChannelState","frequency","carrierFrequency","messageFrequency","amplitude","waveform","phase","outputting","modulation","initialState","channelOne","channelTwo","currChannel","earWarning","AppContext","createContext","persistedState","JSON","parse","window","localStorage","modifyChannelState","state","channelData","onChannel","newState","targetChannel","channelObj","reducer","action","payload","value","min","max","Math","channel","AppContextProvider","props","fullInitialState","React","useReducer","dispatch","useEffect","toSerialize","stringify","Provider","children","Consumer","setAmplitudeAction","setCurrChannelAction","setChannelOutputtingAction","setModulationModeAction","getActiveChannel","getTargetChannel","target","getFrequency","getCarrierFrequency","getMessageFrequency","getAmplitude","getWaveform","getPhase","getOutputting","getModulation","transformPhase","FunctionGeneratorChannel","oscillator","useRef","stereo","gain","delay","fs","L","N","fft","require","audioCtx","active","newOsc","createOscillator","current","newGain","createGain","newStereo","createStereoPanner","offset","pan","newDelay","createDelay","delayTime","connect","destination","analyser","syncMultiplier","start","ceil","currentTime","stop","disconnect","signal","Float32Array","real","imag","fc","i","sin","PI","fi","response","newWave","createPeriodicWave","disableNormalization","setPeriodicWave","drawWaveIntervalID","WakeLock","enabled","Insomnia","keepAwake","allowSleepAgain","FunctionGeneratorAudio","AudioContext","close","freqOne","freqTwo","chOne","chTwo","FunctionGenerator","useContext","useIonAlert","present","cssClass","header","message","buttons","text","handler","activeChannel","setFrequency","useCallback","freq","setFrequencyAction","chOneFrequency","chTwoFrequency","setAmplitude","amp","chOneAmplitude","chTwoAmplitude","setWaveform","setWaveformAction","chOneWaveform","chTwoWaveform","setPhase","setPhaseAction","chOnePhase","chTwoPhase","setCurrChannel","chOneOutputting","chTwoOutputting","toggleChOneOutputting","toggleChTwoOutputting","useState","showPopover","frequencyPopoverState","setShowFrequencyPopover","amplitudePopoverState","setShowAmplitudePopover","phasePopoverState","setShowPhasePopover","popoverFrequencySet","popoverAmplitudeSet","popoverPhaseSet","keyUpHandler","event","popover","key","inputFrequency","inputAmplitude","inputPhase","chOneValues","chTwoValues","color","slot","style","fontWeight","fullscreen","scrollY","onClick","round","alt","log","step","onIonChange","e","frequencyValue","exp","logarithmic","isOpen","isPlatform","showBackdrop","onDidPresent","setFocus","onDidDismiss","ref","inputmode","placeholder","parseInt","onKeyUp","DrawGraph","isSpectrumGraph","graphLayer","Paper","Layer","drawGridLines","width","height","boundingRect","width_per_rectangle","height_per_rectangle","xPos","left","topPoint","Point","top","bottomPoint","bottom","aLine","Path","Line","strokeColor","strokeWidth","yPos","oldyPos","oldxPos","hatchMark","hatch1","hatch2","horizontalCenterLine","leftPoint","rightPoint","right","incx","view","bounds","on","activate","removeChildren","clamp","num","Trigger","axis","this","basePath","segments","length","fillColor","selected","closed","rotation","selecting","pos","position","x","y","hitDetected","hitTest","point","stroke","fill","tolerance","item","drawTriggers","onUpdate","triggerLayer","timePos","voltPos","timeTrigger","voltTrigger","onMouseDown","mousedown","onMouseDrag","mousedrag","onMouseUp","mouseup","resize","cursorFlag","drawCursors","cursorLayer","timePos1","timePos2","voltPos1","voltPos2","timeCursorDiff","abs","voltCursorDiff","timeCursorLine1","strokeCap","dashArray","timeCursor1","Circle","center","radius","timeCursorLine2","timeCursor2","voltCursorLine1","voltCursor1","voltCursorLine2","voltCursor2","visible","timeCursor1Active","voltCursor1Active","timeCursor2Active","voltCursor2Active","hitOptions","timeHitResult1","voltHitResult1","timeHitResult2","voltHitResult2","console","remove","exportCSV","waveValues","csv","row","csvBlob","Blob","blobUrl","URL","createObjectURL","anchorElement","document","createElement","href","today","Date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","shareData","File","failedWarning","alert","resolveLocalFileSystemURL","filesystem","getDirectory","create","exclusive","directory","getFile","fileEntry","createWriter","writer","onwriteend","seek","write","navigator","canShare","share","then","catch","error","name","download","click","drawingWave","voltageDiv","timeDiv","timeDiff","voltDiff","autoset","maxPoint","bufferSize","sampleRate","windowing","windowType","voltageMultiplierConstant","triggerPoint","triggerFlag","saveFlag","setTriggers","val1","val2","drawWave","frequencyChangeCallback","autosetFinishCallback","timeDivChangeCallback","voltDivChangeCallback","saveFinishCallback","Wave","amount","offsetX","waveSpeed","_path","init","size","add","update","_event","tempVoltDiv","tempTimeDiv","dataArray","freqPerPoint","leftIdx","floor","bufferPoint","segment","startPoint","bufferIdx","timeOffset","waveLayer","findTrigger","point1","point2","findMaxVoltage","findFrequency","crossCount","firstIndex","lastIndex","applyWindow","hann","audioinput","startCapture","streamToWebAudio","checkMicrophonePermission","hasPermission","getMicrophonePermission","constraints","audio","autoGainControl","echoCancellation","noiseSuppression","mediaDevices","getUserMedia","mediaStream","ctx","mic","createMediaStreamSource","spe","createAnalyser","fftSize","osc","drawWaveInterval","setInterval","getFloatTimeDomainData","magnitude","sqrt","pow","err","path1","Canvas","canvasRef","renderFrame","animate","clientWidth","clearInterval","canvas","setup","drawGraph","voltageDivChangeCallback","cursorChangeCallback","draw","requestAnimationFrame","cancelAnimationFrame","viewSize","Size","clientHeight","emit","isFullscreen","val","playPauseFlag","OScope","voltUnitDiv","flag","setFlag","fullscreenFlag","setFullscreenFlag","displayFlag","setDisplayFlag","voltageStart","setVoltageStart","timeStart","setTimeStart","setTriggerFlag","setCursorFlag","setAutoset","setTimeDiff","setVoltDiff","setSaveFlag","changeFullscreenFlag","triggerMenuPopoverState","setShowTriggerMenuPopover","popoverTriggerMenuSet","calculateTime","toFixed","calculateVoltage","calculateTimeDivision","calculateVoltageDivison","prev","AMFM","setCarrierFrequency","setCarrierFrequencyAction","setMessageFrequency","msgFreq","setMessageFrequencyAction","chOneMessageFrequency","chTwoMessageFrequency","chOneModulation","chTwoModulation","amChOneModulation","fmChOneModulation","amChTwoModulation","fmChTwoModulation","messageFrequencyPopoverState","setShowMessageFrequencyPopover","popoverMessageFrequencySet","inputMessageFrequency","SpectrumAnalyzer","FREQ_DIV","POINTS_DIV","freqCount","setFreqCount","setFFTSize","setCenter","setWindowType","freqDiff","setFreqDiff","fftSizeMenuPopoverState","setShowFFTSizeMenuPopover","centerPopoverState","setShowCenterPopover","windowPopoverState","setShowWindowPopover","popoverCenterSet","popoverFFTSizeMenuSet","popoverWindowSet","inputCenter","calculateAmplitude","calculateFrequency","calculateFrequencyDivision","calculateAmplitudeDivision","freqDiv","marginBottom","marginTop","Tutorial","About","rel","App","listener","ev","register","Plugins","exitApp","addEventListener","removeEventListener","basename","disabled","path","exact","to","Boolean","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","serviceWorker","ready","registration","unregister","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","Error","code","ids","keys","Object","module","exports"],"mappings":"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","file":"static/js/main.dacee95d.chunk.js","sourcesContent":["import {\n  IonContent,\n  IonItem,\n  IonLabel,\n  IonList,\n  IonListHeader,\n  IonMenu,\n  IonMenuToggle,\n  IonImg,\n} from '@ionic/react';\n\nimport { useLocation } from 'react-router-dom';\nimport { mailOutline, mailSharp, paperPlaneOutline, paperPlaneSharp } from 'ionicons/icons';\nimport './Menu.css';\n\ninterface AppPage {\n  url: string;\n  iosIcon: string;\n  mdIcon: string;\n  title: string;\n}\n\nconst appPages: AppPage[] = [\n  {\n    title: 'Function Generator',\n    url: '/page/FunctionGenerator',\n    iosIcon: mailOutline,\n    mdIcon: mailSharp\n  },\n  {\n    title: 'Oscilloscope',\n    url: '/page/OScope',\n    iosIcon: paperPlaneOutline,\n    mdIcon: paperPlaneSharp\n  },\n  {\n    title: 'AM/FM',\n    url: '/page/AMFM',\n    iosIcon: paperPlaneOutline,\n    mdIcon: paperPlaneOutline\n  },\n  {\n    title: 'Spectrum Analyzer',\n    url: '/page/SpectrumAnalyzer',\n    iosIcon: paperPlaneOutline,\n    mdIcon: paperPlaneSharp\n  },\n  {\n    title: 'Logic Analyzer',\n    url: '/page/LogicAnalyzer',\n    iosIcon: paperPlaneOutline,\n    mdIcon: paperPlaneSharp\n  },\n  {\n    title: 'Tutorial',\n    url: '/page/Tutorial',\n    iosIcon: paperPlaneOutline,\n    mdIcon: paperPlaneOutline\n  },\n  {\n    title: 'About',\n    url: '/page/About',\n    iosIcon: paperPlaneOutline,\n    mdIcon: paperPlaneOutline\n  },\n];\n\nconst Menu: React.FC = () => {\n  const location = useLocation();\n\n  return (\n    <IonMenu contentId=\"main\" type=\"overlay\" data-testid=\"menu-toggle\">\n      <IonContent>\n        <IonList id=\"inbox-list\" mode=\"ios\">\n          <IonListHeader>Husker Scope</IonListHeader>\n          {appPages.map((appPage, index) => {\n            return (\n              <IonMenuToggle key={index} autoHide={false}>\n                <IonItem className={location.pathname === appPage.url ? 'selected' : ''} routerLink={appPage.url} routerDirection=\"none\" lines=\"none\" detail={false}>\n                  {\n                  }\n                  <IonLabel>{appPage.title}</IonLabel>\n                </IonItem>\n              </IonMenuToggle>\n            );\n          })}\n          <div className='the-logo'>\n            <IonImg class=\"logo-menu\" src={process.env.PUBLIC_URL + \"/assets/Husker_Scope_Logo_rounded_corners.png\"}></IonImg>\n          </div>\n        </IonList>\n      </IonContent>\n    </IonMenu>\n  );\n};\n\nexport default Menu;\n","import React, { createContext, useEffect } from \"react\";\nimport { clamp } from 'utils/MathUtils';\n\n// Consts\nconst MIN_PHASE = 0;\nconst MAX_PHASE = 360;\n\n// Type definitions\n\n// Total app state\ninterface AppStateInterface {\n  channelOne: FuncGenChannelInterface;\n  channelTwo: FuncGenChannelInterface;\n  currChannel: 0 | 1;\n  earWarning: boolean;\n}\n\n// FG channel state\ninterface FuncGenChannelInterface {\n  frequency: number;\n  carrierFrequency: number;\n  messageFrequency: number;\n  amplitude: number;\n  waveform: WAVETYPE;\n  phase: number;\n  outputting: boolean;\n  modulation: boolean;\n}\n\n// Context including state and a dispatcher\ninterface AppContextInterface {\n  state:AppStateInterface;\n  dispatch:React.Dispatch<ACTIONTYPE>;\n}\n\n// Type for component accepting child props\ninterface AppProps {\n  children: React.ReactNode;\n}\n\n// Waveform types\nexport type WAVETYPE = \"square\" | \"sawtooth\" | \"sine\" | \"triangle\" | \"custom\";\n\n// Reducer action types\ntype ACTIONTYPE =\n  | { type: \"acceptWarning\"; }\n  | { type: \"setFrequency\"; payload: number; }\n  | { type: \"setCarrierFrequency\"; payload: number; }\n  | { type: \"setMessageFrequency\"; payload: number; }\n  | { type: \"setAmplitude\"; payload: number; }\n  | { type: \"setWaveform\"; payload: WAVETYPE;}\n  | { type: \"setPhase\"; payload: number;}\n  | { type: \"setChannelOutputting\"; channel: 0 | 1; payload: boolean;}\n  | { type: \"setCurrChannel\"; payload: 0 | 1;}\n  | { type: \"setModulationMode\"; payload: boolean;};\n\n// Default state for a channel\nconst defaultChannelState: FuncGenChannelInterface = {\n  frequency: 440,\n  carrierFrequency: 550,\n  messageFrequency: 20,\n  amplitude: 100,\n  waveform: \"sine\",\n  phase: 180,\n  outputting: false,\n  modulation: true\n};\n\n// Default total app state\nconst initialState: AppStateInterface = {\n  channelOne: defaultChannelState,\n  channelTwo: defaultChannelState,\n  currChannel: 0,\n  earWarning: true,\n};\n\nexport const AppContext: React.Context<AppContextInterface> = createContext<AppContextInterface>({} as AppContextInterface);\n\n// Load state or default to empty persisted state\nconst persistedState: AppStateInterface = JSON.parse(window.localStorage['persistedState'] ?? '{}');\n\n// Helper function to apply a change to a channel\nconst modifyChannelState = (state: AppStateInterface, channelData: Partial<FuncGenChannelInterface>, onChannel = state.currChannel): AppStateInterface => {\n  // Shallow copy state\n  let newState = {...state};\n\n  // Get property name we are modifiying\n  let targetChannel: keyof AppStateInterface = onChannel === 0 ? 'channelOne' : 'channelTwo';\n\n  // Shallow copy target channel and replace given data\n  let channelObj = {...state[targetChannel], ...channelData};\n\n  return {...newState, [targetChannel]: channelObj};\n}\n\nconst reducer: React.Reducer<AppStateInterface, ACTIONTYPE> = (state: AppStateInterface, action: ACTIONTYPE) => {\n  switch(action.type) {\n    case \"acceptWarning\": {\n      return {...state, earWarning: false};\n    }\n    case \"setFrequency\": {\n      return modifyChannelState(state, {frequency: action.payload});\n    }\n    case \"setCarrierFrequency\": {\n      return modifyChannelState(state, {carrierFrequency: action.payload});\n    }\n    case \"setMessageFrequency\": {\n      return modifyChannelState(state, {messageFrequency: action.payload});\n    }\n    case \"setAmplitude\": {\n      return modifyChannelState(state, {amplitude: action.payload});\n    }\n    case \"setWaveform\": {\n      return modifyChannelState(state, {waveform: action.payload});\n    }\n    case \"setPhase\": {\n      return modifyChannelState(state, {phase: clamp(action.payload, MIN_PHASE, MAX_PHASE)});\n    }\n    case \"setChannelOutputting\": {\n      return modifyChannelState(state, {outputting: action.payload}, action.channel);\n    }\n    case \"setCurrChannel\": {\n      return {...state, currChannel: action.payload};\n    }\n    case \"setModulationMode\": {\n      return modifyChannelState(state, {modulation: action.payload});\n    }\n  }\n\n  // Action not handled\n  return state;\n};\n\nexport function AppContextProvider(props : AppProps) {\n  // Deeply merge the initial state with persisted\n  const fullInitialState = {\n    ...initialState,\n    ...persistedState,\n    channelOne: {\n      ...initialState.channelOne,\n      ...persistedState.channelOne,\n    },\n    channelTwo: {\n      ...initialState.channelTwo,\n      ...persistedState.channelTwo,\n    },\n  };\n  \n  let [state, dispatch] = React.useReducer(reducer, fullInitialState);\n\n  useEffect(() => {\n    // Explicitly serialize these parts of state.\n    // This allows for modifying persistence behavior for particular state.\n    const toSerialize: AppStateInterface = {\n      ...state,\n      channelOne: {\n        ...state.channelOne,\n        outputting: false,\n      },\n      channelTwo: {\n        ...state.channelTwo,\n        outputting: false,\n      },\n      currChannel: 0,\n    };\n    window.localStorage['persistedState'] = JSON.stringify(toSerialize);\n  }, [state]);\n\n\n  let value = { state, dispatch }\n\n  return (\n    <AppContext.Provider value={value}>{props.children}</AppContext.Provider>\n  );\n}\n\nexport const AppContextConsumer = AppContext.Consumer; \n\nexport const acceptWarning = (): ACTIONTYPE => \n({\n  type: 'acceptWarning',\n});\n\nexport const setFrequencyAction = (frequency: number): ACTIONTYPE =>\n({\n  type: 'setFrequency',\n  payload: frequency\n});\n\nexport const setCarrierFrequencyAction = (messageFrequency: number): ACTIONTYPE =>\n({\n  type: 'setCarrierFrequency',\n  payload: messageFrequency\n});\n\nexport const setMessageFrequencyAction = (messageFrequency: number): ACTIONTYPE =>\n({\n  type: 'setMessageFrequency',\n  payload: messageFrequency\n});\n\nexport const setAmplitudeAction = (amplitude: number): ACTIONTYPE =>\n({\n  type: 'setAmplitude',\n  payload: amplitude\n});\n\nexport const setWaveformAction = (waveform: WAVETYPE): ACTIONTYPE =>\n({\n  type: 'setWaveform',\n  payload: waveform\n});\n\nexport const setPhaseAction = (phase: number): ACTIONTYPE =>\n({\n  type: 'setPhase',\n  payload: phase\n});\n\nexport const setCurrChannelAction = (channel: 0 | 1): ACTIONTYPE =>\n({\n  type: 'setCurrChannel',\n  payload: channel\n});\n\nexport const setChannelOutputtingAction = (channel: 0 | 1, outputting: boolean): ACTIONTYPE =>\n({\n  type: 'setChannelOutputting',\n  payload: outputting,\n  channel: channel,\n});\n\nexport const setModulationModeAction = (modulation: boolean): ACTIONTYPE =>\n({\n  type: 'setModulationMode',\n  payload: modulation,\n});\n\n// Get current channel object\nexport const getActiveChannel = (state: AppStateInterface) => (getTargetChannel(state, state.currChannel));\nexport const getTargetChannel = (state: AppStateInterface, target: 0 | 1) => (target === 0 ? state.channelOne : state.channelTwo);\n\nexport const getFrequency = (channel: FuncGenChannelInterface) => (channel.frequency);\nexport const getCarrierFrequency = (channel: FuncGenChannelInterface) => (channel.carrierFrequency);\nexport const getMessageFrequency = (channel: FuncGenChannelInterface) => (channel.messageFrequency);\nexport const getAmplitude = (channel: FuncGenChannelInterface) => (channel.amplitude);\nexport const getWaveform = (channel: FuncGenChannelInterface) => (channel.waveform);\nexport const getPhase = (channel: FuncGenChannelInterface) => (channel.phase);\nexport const getOutputting = (channel: FuncGenChannelInterface) => (channel.outputting);\nexport const getModulation = (channel: FuncGenChannelInterface) => (channel.modulation);\n","export function clamp(value: number, min: number, max: number) {\n  return Math.min(Math.max(value, min), max);\n}\n","import { squareOutline } from 'ionicons/icons';\nimport { useEffect, useRef } from 'react';\n\nimport { getCarrierFrequency, WAVETYPE } from '../State';\n\nexport interface FGAudioChannel {\n  active: boolean,\n  frequency: number,\n  messageFrequency: number,\n  amplitude: number,\n  waveform: WAVETYPE,\n  phase: number,\n  modulation: boolean\n}\n\ninterface FGAudioChannelProps extends FGAudioChannel {\n  audioCtx: AudioContext,\n  channel: \"left\" | \"right\",\n  syncMultiplier: number,\n  analyser?: AnalyserNode,\n}\n\n// Convert from [0, 360] to corresponding amount of delay in seconds\nconst transformPhase = (frequency: number, phase: number) => {\n  return (1/frequency) * (phase/360 + 0.5);\n}\n\nexport const FunctionGeneratorChannel = (props: FGAudioChannelProps) => {\n  // Audio node refs\n  const oscillator = useRef<OscillatorNode>(null!);\n  const stereo = useRef<StereoPannerNode>(null!);\n  const gain = useRef<GainNode>(null!);\n  const delay = useRef<DelayNode>(null!);\n\n  // Value refs\n  const frequency = useRef<number>(440);\n  const messageFrequency = useRef<number>(40);\n  const amplitude = useRef<number>(100);\n  const phase = useRef<number>(180);\n  const modulation = useRef<boolean>(false);\n  \n  const fs = 48000;\n  const L = 2048;\n  const N = 2048;\n  const fmult = 2.432;\n\n  let fft = require('fft-js').fft;\n\n  // Activate/deactivate\n  useEffect(() => {\n    // Is activating?\n    if(props.audioCtx && props.active) {\n      // Setup oscillator node\n      let newOsc = props.audioCtx.createOscillator();\n\n      if (props.waveform != \"custom\" as WAVETYPE) {\n        newOsc.frequency.value = frequency.current;\n        newOsc.type = props.waveform;\n      }\n\n      // Setup gain node\n      let newGain = props.audioCtx.createGain();\n      newGain.gain.value = amplitude.current;\n\n      // Setup stereo node\n      let newStereo = props.audioCtx.createStereoPanner();\n      let offset: number = 0;\n      switch(props.channel) {\n        case \"left\": {\n          offset = -1;\n          break;\n        }\n        case \"right\": {\n          offset = 1;\n          break;\n        }\n        default: {\n          offset = 0;\n          break;\n        }\n      }\n\n      newStereo.pan.value = offset;\n\n      // Setup delay node\n      let newDelay = props.audioCtx.createDelay();\n      newDelay.delayTime.value = transformPhase(frequency.current, phase.current);\n\n      // Save to refs\n      oscillator.current = newOsc;\n      gain.current = newGain;\n      stereo.current = newStereo;\n      delay.current = newDelay;\n\n      // Connect nodes\n      newOsc.connect(newGain);\n      newGain.connect(newStereo);\n      newStereo.connect(newDelay);\n      newDelay.connect(props.audioCtx.destination);\n\n      // Connect to analyser if it exists\n      if(props.analyser) {\n        newDelay.connect(props.analyser);\n      }\n\n      // Start playing at next integer timestamp at least 0.05 seconds from now\n      // if the channels can be synced. Otherwise, start immediately.\n      if(props.syncMultiplier) {\n        newOsc.start(Math.ceil(props.audioCtx.currentTime + 0.05));\n      } else {\n        newOsc.start();\n      }\n\n      // Cleanup function\n      return () => {\n        newOsc.stop();\n        newOsc.disconnect();\n        newGain.disconnect();\n        newStereo.disconnect();\n        newDelay.disconnect();\n\n        if(props.analyser) {\n          props.analyser.disconnect();\n        }\n      };\n    }\n  }, [props.audioCtx, props.waveform, props.channel, props.active, props.analyser, props.syncMultiplier]);\n\n  // Update parameter values\n  useEffect(() => {\n    // Update ref\n    frequency.current = props.frequency;\n    messageFrequency.current = props.messageFrequency;\n    amplitude.current = props.amplitude;\n    phase.current = props.phase;\n    modulation.current = props.modulation;\n\n    // If active, also update current oscillator\n    if(props.audioCtx && props.active) {\n      if (props.waveform == \"custom\" as WAVETYPE) {\n\n        let signal = new Float32Array(L);\n        let real = new Float32Array(N/2);\n        let imag = new Float32Array(N/2);\n\n        if (modulation.current) {\n          oscillator.current.frequency.value = messageFrequency.current;\n\n          let fc = frequency.current * 25 / messageFrequency.current * .94;\n          let fm = fs / L;\n          for (let i = 0; i < L; i++) {\n            signal[i] = Math.sin(2 * Math.PI * fc * i / fs) * \n            Math.sin(2 * Math.PI * fm * i / fs);\n          }\n        } else {\n          oscillator.current.frequency.value = messageFrequency.current;\n\n          let fc = frequency.current * 25 / messageFrequency.current * .94;;\n          let fm = fs / L;\n          // let fi = (fc - messageFrequency.current) / messageFrequency.current;\n          // let fi = 2 * (frequency.current / messageFrequency.current) ** .75;\n          let fi = .5 * frequency.current / messageFrequency.current;\n          for (let i = 0; i < L; i++) {\n            signal[i] = Math.sin(2 * Math.PI * fc * i / fs + \n            fi * Math.sin(2 * Math.PI * fm * i / fs) );\n          }\n        }\n\n        let response = fft(signal);\n\n        for (let i = 0; i < N / 2; i++) {\n          real[i] = response[i][0] * -2 * Math.PI / N;\n          imag[i] = response[i][1] * -2 * Math.PI / N;\n        }\n\n        let newWave = props.audioCtx.createPeriodicWave(real, imag, {disableNormalization: true});\n\n        oscillator.current.setPeriodicWave(newWave);\n\n        delay.current.delayTime.value = 0;\n\n        gain.current.gain.value = amplitude.current * .2;\n      } else {\n        oscillator.current.frequency.value = frequency.current; \n        delay.current.delayTime.value = transformPhase(frequency.current, phase.current);\n        gain.current.gain.value = amplitude.current;\n      }\n    }\n  }, [props.audioCtx, props.active, props.frequency, props.messageFrequency, props.amplitude, props.phase, props.modulation]);\n\n  return null;\n};\n","import React, { useRef, useEffect } from 'react';\nimport Paper from 'paper';\nimport drawGraph from 'components/DrawGraph';\nimport drawTriggers from 'components/triggers';\nimport drawCursors, {setCursorFlag} from 'components/cursors';\nimport drawWave, {setDrawWave, setVoltageDiv, setTimeDiv, setTriggers, setAutoset, setTriggerFlag, setSaveFlag, setWindowType, setCenter} from 'components/DrawWave';\nimport { isPlatform } from '@ionic/react';\n\n/* global */\nvar drawWaveIntervalID;\nconst Canvas = props => {\n  \n  const canvasRef = useRef(null);\n  const renderFrame = useRef(null);\n  const isSpectrumGraph = props.className === 'spectrum-graph';\n\n  const animate = async () => {\n    if(canvasRef.current !== null && canvasRef.current.clientWidth !== 0) {\n      // Manually clear the old draw wave by clearing its interval.\n      if (typeof drawWaveIntervalID !== \"undefined\") {\n        clearInterval(drawWaveIntervalID);\n      }\n      const canvas = canvasRef.current;\n      Paper.setup(canvas);\n\n      drawGraph(isSpectrumGraph);\n      if (!isSpectrumGraph) {\n        drawTriggers((val1, val2) => setTriggers(val1, val2));\n      }\n\n      drawWaveIntervalID = await drawWave(isSpectrumGraph, \n        props.frequencyChangeCallback, \n        props.autosetFinishCallback, \n        props.timeDivChangeCallback, \n        props.voltageDivChangeCallback, \n        props.saveFinishCallback\n      );\n      drawCursors(props.cursorChangeCallback);\n\n      Paper.view.draw();\n    } else {\n      renderFrame.current = requestAnimationFrame(animate);\n    }\n  };\n\n  useEffect(() => {\n    renderFrame.current = requestAnimationFrame(animate);\n\n    return () => {\n      cancelAnimationFrame(renderFrame.current);\n    };\n  }, []);\n\n  useEffect(() => {\n    // If we have a view, fix the scaling on fullscreen toggle\n    if(Paper.view) {\n      Paper.view.viewSize = isPlatform(\"ios\") || isPlatform(\"android\") ? new Paper.Size(canvasRef.current.clientWidth, canvasRef.current.clientHeight) : \n                                                                         new Paper.Size(canvasRef.current.clientWidth*2, canvasRef.current.clientHeight*2);\n      Paper.view.emit('resize', {});\n    }\n  }, [props.isFullscreen]);\n\n  \n  useEffect(() => {\n    setDrawWave(props.playPauseFlag);\n  }, [props.playPauseFlag]);\n\n  useEffect(() => {\n    setVoltageDiv(props.voltageDiv);\n  }, [props.voltageDiv]);\n\n  useEffect(() => {\n    setTimeDiv(props.timeDiv);\n  }, [props.timeDiv]);\n\n  useEffect(() => {\n    setAutoset(props.autoset);\n  }, [props.autoset]);\n\n  useEffect(() => {\n    setTriggerFlag(props.triggerFlag);\n  }, [props.triggerFlag]);\n\n  useEffect(() => {\n    setCursorFlag(props.cursorFlag);\n  }, [props.cursorFlag]);\n\n  useEffect(() => {\n    setSaveFlag(props.saveFlag);\n  }, [props.saveFlag]);\n\n  useEffect(() => {\n    setWindowType(props.windowType);\n  }, [props.windowType]);\n\n  useEffect(() => {\n    setCenter(props.center);\n  }, [props.center]);\n  \n  return <canvas ref={canvasRef} className={props.className} resize=\"true\" id=\"canvas\" />\n}\n\nexport default Canvas;\n","import React, { useEffect } from 'react';\nimport { Insomnia } from '@awesome-cordova-plugins/insomnia';\n\ninterface WakeLockProps {\n  enabled: boolean;\n}\n\nconst WakeLock = (props: WakeLockProps) => {\n\n  useEffect(() => {\n    if(props.enabled) {\n      // Wake-lock on\n      Insomnia.keepAwake();\n\n      // Disable wakelock\n      return () => {\n        Insomnia.allowSleepAgain();\n      };\n    }\n\n  }, [props.enabled]);\n\n  return null;\n}\n\nexport default WakeLock;\n","import React, { useRef, useEffect } from 'react';\n\nimport { FunctionGeneratorChannel } from './FunctionGeneratorChannel';\n\nimport type { FGAudioChannel } from './FunctionGeneratorChannel';\n\nimport { getSyncMultiplier } from 'utils/FrequencyUtils';\n\nimport WakeLock from 'components/WakeLock';\n\nexport interface FGAudioProps {\n  chOne: FGAudioChannel,\n  chTwo: FGAudioChannel,\n}\n\nexport const FunctionGeneratorAudio = (props: FGAudioProps) => {\n  const audioCtx = useRef<AudioContext>(null!);\n\n  // Init/cleanup audio context\n  useEffect(() => {\n    audioCtx.current = new AudioContext();\n\n    return () => {\n      audioCtx.current.close();\n    };\n  }, []);\n\n  // Check if should sync\n  const syncMultiplier = getSyncMultiplier(props.chOne.frequency, props.chTwo.frequency);\n\n  // Create the two channels\n  return (\n    <>\n      <WakeLock enabled={props.chOne.active || props.chTwo.active} />\n      <FunctionGeneratorChannel channel=\"left\" syncMultiplier={syncMultiplier} audioCtx={audioCtx.current} {...props.chOne} />\n      <FunctionGeneratorChannel channel=\"right\" syncMultiplier={syncMultiplier} audioCtx={audioCtx.current} {...props.chTwo} />\n    </>\n  );\n};\n","// Get the multiplier of the larger freq w.r.t. smaller or 0 if not divisible.\nexport function getSyncMultiplier(freqOne: number, freqTwo: number): number {\n  // Is one number a multiple of the other?\n  let remainder = Math.max(freqOne, freqTwo) % Math.min(freqOne, freqTwo);\n  \n  // Not a multiplier, return 0;\n  if(remainder !== 0) {\n    return 0;\n  }\n\n  // Otherwise, return multiplicity of larger frequency\n  return Math.max(freqOne, freqTwo) / Math.min(freqOne, freqTwo);\n}\n","import React, { useState, useContext, useEffect, useCallback, useRef } from 'react';\nimport {\n  IonButtons, IonContent, IonHeader, IonMenuButton, IonPage, IonTitle, IonToolbar, IonRange,\n  IonButton, IonInput, IonImg, IonPopover, IonIcon, useIonAlert\n} from '@ionic/react';\n\nimport {\n  AppContext, setFrequencyAction, setAmplitudeAction, setWaveformAction,\n  setPhaseAction, setCurrChannelAction, setChannelOutputtingAction,\n  getFrequency, getAmplitude, getWaveform, getPhase, getActiveChannel,\n  getTargetChannel, getOutputting, acceptWarning,\n} from '../State';\n\nimport type { WAVETYPE } from '../State';\n\nimport { FunctionGeneratorAudio } from '../components/FunctionGeneratorAudio';\nimport './FunctionGenerator.css';\nimport { isPlatform } from '@ionic/core';\n\nconst FunctionGenerator: React.FC = () => {\n\n  const { state, dispatch } = useContext(AppContext);\n  const [present] = useIonAlert();\n\n  // Ear damage warning\n  useEffect(() => {\n    if(state.earWarning) {\n      present({\n        cssClass: 'alert',\n        header: 'Warning',\n        message: 'This app can produce loud sounds that can damage sensitive parts of the ear resulting in hearing loss.<br /><br />Use with caution and avoid wearing headphones.',\n        buttons: [ \n          {\n            text: 'I understand',\n            handler: () => {\n              dispatch(acceptWarning());\n            }\n          }\n        ]\n      });\n    }\n  }, [dispatch, present, state.earWarning]);\n\n\n  // Effect for disabling channels outputting when leaving page\n  useEffect(() => {\n    // Cleanup\n    return () => {\n      dispatch(setChannelOutputtingAction(0, false));\n      dispatch(setChannelOutputtingAction(1, false));\n    }\n  }, [dispatch]);\n\n  const name = \"Function Generator\";\n\n  // Selected channel obj\n  const activeChannel = getActiveChannel(state);\n\n  // Left-right channels\n  const chOne = getTargetChannel(state, 0);\n  const chTwo = getTargetChannel(state, 1);\n\n  // Get and set frequency\n  const frequency = getFrequency(activeChannel);\n  const setFrequency = useCallback((freq: number) => {\n    dispatch(setFrequencyAction(freq));\n  }, [dispatch]);\n\n  // Get both channel frequencies\n  const chOneFrequency = getFrequency(chOne);\n  const chTwoFrequency = getFrequency(chTwo);\n\n  // Get and set amplitude\n  const amplitude = getAmplitude(activeChannel);\n  const setAmplitude = useCallback((amp: number) => {\n    dispatch(setAmplitudeAction(Math.max(0, amp)));\n  }, [dispatch]);\n\n  // Get both channel amplitude\n  const chOneAmplitude = getAmplitude(chOne);\n  const chTwoAmplitude = getAmplitude(chTwo);\n\n  // Get and set waveform\n  const waveform = getWaveform(activeChannel);\n  const setWaveform = useCallback((waveform: WAVETYPE) => {\n    dispatch(setWaveformAction(waveform));\n  }, [dispatch]);\n\n  const chOneWaveform = getWaveform(chOne);\n  const chTwoWaveform = getWaveform(chTwo);\n\n  // Get and set phase\n  const phase = getPhase(activeChannel);\n  const setPhase = useCallback((phase: number) => {\n    dispatch(setPhaseAction(phase));\n  }, [dispatch]);\n\n  const chOnePhase = getPhase(chOne);\n  const chTwoPhase = getPhase(chTwo);\n\n  // Get and set current channel\n  const currChannel = state.currChannel;\n  const setCurrChannel = useCallback((channel: 0 | 1) => {\n    dispatch(setCurrChannelAction(channel));\n  }, [dispatch]);\n\n  // Get and set channels outputting\n  const chOneOutputting = getOutputting(chOne);\n  const chTwoOutputting = getOutputting(chTwo);\n\n  const toggleChOneOutputting = useCallback(() => {\n    dispatch(setChannelOutputtingAction(0, !chOneOutputting));\n  }, [chOneOutputting, dispatch]);\n\n  const toggleChTwoOutputting = useCallback(() => {\n    dispatch(setChannelOutputtingAction(1, !chTwoOutputting));\n  }, [chTwoOutputting, dispatch]);\n\n  // parsing frequency slider value to change it to frequency value\n  function logarithmic(value: number) {\n    let frequencyValue = Math.exp(value) + 19;\n    setFrequency(frequencyValue);\n  }\n\n  // For showing and hiding popovers  \n  const [frequencyPopoverState, setShowFrequencyPopover] = useState({ showPopover: false, frequency: 440 });\n  const [amplitudePopoverState, setShowAmplitudePopover] = useState({ showPopover: false, amplitude: 100 });\n  const [phasePopoverState, setShowPhasePopover] = useState({ showPopover: false, phase: 180 });\n\n  function popoverFrequencySet() {\n    setFrequency(frequencyPopoverState.frequency);\n    setShowFrequencyPopover({ showPopover: false, frequency: frequency });\n  }\n\n  function popoverAmplitudeSet() {\n    setAmplitude(amplitudePopoverState.amplitude);\n    setShowAmplitudePopover({ showPopover: false, amplitude: amplitude });\n  }\n\n  function popoverPhaseSet() {\n    setPhase(phasePopoverState.phase);\n    setShowPhasePopover({ showPopover: false, phase: phase });\n  }\n\n  function keyUpHandler(event: React.KeyboardEvent<HTMLIonInputElement>, popover: string) {\n    if (event.key === \"Enter\") {\n      switch (popover) {\n        case \"frequency\": popoverFrequencySet(); break;\n        case \"amplitude\": popoverAmplitudeSet(); break;\n        case \"phase\": popoverPhaseSet(); break;\n      }\n    }\n  }\n\n  const inputFrequency = useRef<HTMLIonInputElement>(null!);\n  const inputAmplitude = useRef<HTMLIonInputElement>(null!);\n  const inputPhase = useRef<HTMLIonInputElement>(null!);\n\n  function frequencyInputFocus() {\n    inputFrequency.current.setFocus();\n  }\n\n  function amplitudeInputFocus() {\n    inputAmplitude.current.setFocus();\n  }\n\n  function phaseInputFocus() {\n    inputPhase.current.setFocus();\n  }\n\n  const chOneValues = { active: chOneOutputting, frequency: chOneFrequency, messageFrequency: 0, amplitude: chOneAmplitude / 100, phase: chOnePhase, waveform: chOneWaveform, modulation: false}\n  const chTwoValues = { active: chTwoOutputting, frequency: chTwoFrequency, messageFrequency: 0, amplitude: chTwoAmplitude / 100, phase: chTwoPhase, waveform: chTwoWaveform, modulation: false}\n\n  return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar mode=\"ios\" color=\"primary\">\n          <IonButtons slot=\"start\">\n            <IonMenuButton />\n          </IonButtons>\n          <IonTitle><b style={{fontWeight: \"bolder\"}}>Husker Scope</b>{\": \" + name}</IonTitle>\n          <IonImg slot=\"end\" class=\"logo\" src={process.env.PUBLIC_URL + \"/assets/Husker_Scope_Logo_circle.png\"}></IonImg>\n        </IonToolbar>\n      </IonHeader>\n\n      <IonContent fullscreen scrollY={false} color=\"secondary\">\n        <FunctionGeneratorAudio chOne={chOneValues} chTwo={chTwoValues} />\n        <div className=\"frequency-waveform-channels\">\n\n          {/* Channel 1 Editing Button */}\n          <div className=\"channel-div\">\n            <IonButton class=\"edit-button-L\" mode=\"ios\" onClick={() => { setCurrChannel(0) }} color={currChannel === 0 ? \"primary\" : \"light\"} data-testid=\"left-edit\">\n              <div className=\"edit-button-contents\">\n                CH1 <br /> \n                FQ: {Math.round(chOneFrequency)} Hz <br /> \n                AMP: {chOneAmplitude}% <br /> \n                PH: {chOnePhase}°\n                <img className=\"edit-img\" src={process.env.PUBLIC_URL + `/assets/${chOneWaveform}-wave.png`} alt=\"\" />\n              </div>\n            </IonButton>\n          </div>\n\n          <div className=\"frequency-and-waveform\">\n\n            {/* Frequency Button and Slider */}\n            <div className=\"frequency-button-div\">\n              <IonButton class=\"frequency-button\" mode=\"ios\" color=\"light\" onClick={() => setShowFrequencyPopover({ showPopover: true, frequency: frequency })} data-testid=\"frequency-button\">\n                Frequency: {Math.round(frequency)} Hz\n              </IonButton>\n            </div>\n\n            <div>\n              <IonRange class=\"range-frequency\" mode=\"ios\" value={Math.log(frequency - 19)} min={0} max={Math.log(20000 - 19)} step={.0000000001} onIonChange={e => logarithmic(e.detail.value as any)} data-testid=\"frequency-range\"/>\n            </div>\n\n            {/* Waveform Buttons */}\n            <div className=\"waveform-buttons\">\n              <IonButton class=\"waveform-button\" color={waveform === \"sine\" ? \"primary\" : \"light\"} onClick={() => { setWaveform(\"sine\") }} mode=\"ios\" data-testid=\"sine-button\">\n                <IonIcon class=\"waveform-icon-1\" slot=\"icon-only\" src={process.env.PUBLIC_URL + \"/assets/icon/sine-wave2.svg\"} /></IonButton>\n              <IonButton class=\"waveform-button\" color={waveform === \"triangle\" ? \"primary\" : \"light\"} onClick={() => { setWaveform(\"triangle\") }} mode=\"ios\" data-testid=\"triangle-button\">\n                <IonIcon class=\"waveform-icon-1\" slot=\"icon-only\" src={process.env.PUBLIC_URL + \"/assets/icon/triangle-wave2.svg\"} /></IonButton>\n              <IonButton class=\"waveform-button\" color={waveform === \"square\" ? \"primary\" : \"light\"} onClick={() => { setWaveform(\"square\") }} mode=\"ios\" data-testid=\"square-button\">\n                <IonIcon class=\"waveform-icon-2\" slot=\"icon-only\" src={process.env.PUBLIC_URL + \"/assets/icon/square-wave2.svg\"} /></IonButton>\n              <IonButton class=\"waveform-button\" color={waveform === \"sawtooth\" ? \"primary\" : \"light\"} onClick={() => { setWaveform(\"sawtooth\") }} mode=\"ios\" data-testid=\"sawtooth-button\">\n                <IonIcon class=\"waveform-icon-2\" slot=\"icon-only\" src={process.env.PUBLIC_URL + \"/assets/icon/sawtooth-wave2.svg\"} /></IonButton>\n            </div>\n          </div>\n\n          {/* Channel 2 Editing Button */}\n          <div className=\"channel-div\">\n            <IonButton class=\"edit-button-R\" mode=\"ios\" onClick={() => { setCurrChannel(1) }} color={currChannel === 1 ? \"primary\" : \"light\"} data-testid=\"right-edit\">\n              <div className=\"edit-button-contents\">\n                CH2 <br /> \n                FQ: {Math.round(chTwoFrequency)} Hz <br /> \n                AMP: {chTwoAmplitude}% <br /> \n                PH: {chTwoPhase}°\n                <img className=\"edit-img\" src={process.env.PUBLIC_URL + `/assets/${chTwoWaveform}-wave.png`} alt=\"\" />\n              </div>\n            </IonButton>\n          </div>\n\n        </div>\n\n        {/* Amplitude, Start/Stop Buttons, Phase */}\n        <div className=\"amplitude-start-phase\">\n\n          {/* Amplitude Button and Slider */}\n          <div className=\"amplitude-components\">\n            <IonButton class=\"amplitude-button\" mode=\"ios\" color=\"light\" onClick={() => setShowAmplitudePopover({ showPopover: true, amplitude: amplitude })} data-testid=\"amplitude-button\">\n              Amplitude: {amplitude}%\n            </IonButton>\n            <IonRange class=\"range-amplitude\" mode=\"ios\" value={amplitude} min={0} max={100} step={1} onIonChange={e => setAmplitude(e.detail.value as any)} data-testid=\"amplitude-range\"/>\n          </div>\n\n          {/* Play/Pause Buttons */}\n          <div className=\"start-buttons\">\n            {/* CH1 Play/Pause Button */}\n            <IonButton class=\"hold-button\" mode=\"ios\" onClick={() => { toggleChOneOutputting() }} color={chOneOutputting ? \"primary\" : \"light\"} data-testid=\"left-play\">\n              <div className=\"edit-button-contents\">\n                CH1\n                <img className=\"play-pause-img\" src={process.env.PUBLIC_URL + (chOneOutputting ? \"/assets/pause.png\" : \"/assets/play.png\")} alt=\"\" ></img>\n              </div>\n            </IonButton>\n\n            {/* CH2 Play/Pause Button */}\n            <IonButton class=\"hold-button\" mode=\"ios\" onClick={() => { toggleChTwoOutputting() }} color={chTwoOutputting ? \"primary\" : \"light\"} data-testid=\"right-play\">\n              <div className=\"edit-button-contents\">\n                CH2\n                <img className=\"play-pause-img\" src={process.env.PUBLIC_URL + (chTwoOutputting ? \"/assets/pause.png\" : \"/assets/play.png\")} alt=\"\" ></img>\n              </div>\n            </IonButton>\n          </div>\n\n          {/* Phase Button and Slider */}\n          <div className=\"phase-components\">\n            <IonButton class=\"phase-button\" mode=\"ios\" color=\"light\" onClick={() => setShowPhasePopover({ showPopover: true, phase: phase })} data-testid=\"phase-button\">\n              Phase: {phase}°\n            </IonButton>\n            <IonRange class=\"range-phase\" mode=\"ios\" value={phase} min={0} max={360} step={1} onIonChange={e => setPhase(e.detail.value as any)} data-testid=\"phase-range\"/>\n          </div>\n\n        </div>\n\n\n        {/* Frequency Popover */}\n        <IonPopover\n          isOpen={frequencyPopoverState.showPopover}\n          cssClass={isPlatform(\"ios\") || isPlatform(\"android\") ? \"input-popover\" : \"input-popover-web\"}\n          mode=\"ios\"\n          showBackdrop={true}\n          onDidPresent={() => frequencyInputFocus()}\n          onDidDismiss={() => setShowFrequencyPopover({ showPopover: false, frequency: frequency })} data-testid=\"frequency-popup\">\n          <div className=\"popover-content\">\n            <IonInput ref={inputFrequency} class=\"input-popover-text\" type=\"number\" inputmode=\"numeric\" placeholder=\"20 to 20000 Hz\"\n              onIonChange={e => setShowFrequencyPopover((state) => { return { ...state, frequency: parseInt(e.detail.value!, 10) } })}\n              onKeyUp={e => keyUpHandler(e, \"frequency\")}\n            ></IonInput>\n            <IonButton\n              onClick={(e: any) => popoverFrequencySet()} data-testid=\"frequency-confirm\">\n              CONFIRM\n            </IonButton>\n          </div>\n        </IonPopover>\n\n        {/* Amplitude Popover */}\n        <IonPopover\n          isOpen={amplitudePopoverState.showPopover}\n          cssClass={isPlatform(\"ios\") || isPlatform(\"android\") ? \"input-popover\" : \"input-popover-web\"}\n          mode=\"ios\"\n          showBackdrop={true}\n          onDidPresent={() => amplitudeInputFocus()}\n          onDidDismiss={() => setShowAmplitudePopover({ showPopover: false, amplitude: frequency })} data-testid=\"amplitude-popup\">\n          <div className=\"popover-content\">\n            <IonInput ref={inputAmplitude} class=\"input-popover-text\" type=\"number\" inputmode=\"numeric\" placeholder=\"0 to 100\"\n              onIonChange={e => setShowAmplitudePopover((state) => { return { ...state, amplitude: parseInt(e.detail.value!, 10) } })}\n              onKeyUp={e => keyUpHandler(e, \"amplitude\")}\n            ></IonInput>\n            <IonButton onClick={(e: any) => popoverAmplitudeSet()} data-testid=\"amplitude-confirm\">\n              CONFIRM\n            </IonButton>\n          </div>\n        </IonPopover>\n\n        {/* Phase Popover */}\n        <IonPopover\n          isOpen={phasePopoverState.showPopover}\n          cssClass={isPlatform(\"ios\") || isPlatform(\"android\") ? \"input-popover\" : \"input-popover-web\"}\n          mode=\"ios\"\n          showBackdrop={true}\n          onDidPresent={() => phaseInputFocus()}\n          onDidDismiss={() => setShowPhasePopover({ showPopover: false, phase: phase })} data-testid=\"phase-popup\">\n          <div className=\"popover-content\">\n            <IonInput ref={inputPhase} class=\"input-popover-text\" type=\"number\" inputmode=\"numeric\" placeholder=\"0° to 360°\"\n              onIonChange={e => setShowPhasePopover((state) => { return { ...state, phase: parseInt(e.detail.value!, 10) } })}\n              onKeyUp={e => keyUpHandler(e, \"phase\")}\n            ></IonInput>\n            <IonButton onClick={() => popoverPhaseSet()} data-testid=\"phase-confirm\">\n              CONFIRM\n            </IonButton>\n          </div>\n        </IonPopover>\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default FunctionGenerator;\n\n","/*\nThis file is used to display graph on the left side of the \nscreen on the oscilloscope page. This is done with the use \nof paperJS. All that is done is the lines are place on the \nmax and min points of the graph area, then a loop is ran \nto place the intersecting lines of the graph.\n*/\n\nimport Paper from \"paper\";\n\nconst DrawGraph = (isSpectrumGraph) => {\n  let graphLayer = new Paper.Layer();\n\n  var drawGridLines = function (width, height, boundingRect) {\n    var width_per_rectangle = boundingRect.width / width;\n    var height_per_rectangle = boundingRect.height / height;\n    var hatchLengthFactor = 0.012;\n\n    //set up vertical grid lines\n    for (var i = 0; i <= width; i++) {\n      var xPos = boundingRect.left + i * width_per_rectangle;\n      var topPoint = new Paper.Point(xPos, boundingRect.top);\n      var bottomPoint = new Paper.Point(xPos, boundingRect.bottom);\n      var aLine = new Paper.Path.Line(topPoint, bottomPoint);\n      aLine.strokeColor = \"black\";\n      aLine.strokeWidth = 0.6;\n\n      //vertical center line and hatch marks\n      if (i === 5) {\n        aLine.strokeWidth = 1.5;\n\n        //already have xPos\n        var yPos = boundingRect.top;\n        var oldyPos = yPos;\n        var oldxPos = xPos;\n\n        //create hatch marks for vertical center line\n        for (var hatchMark = 0; hatchMark < 40; hatchMark++) {\n          xPos = oldxPos;\n\n          let yPos = (boundingRect.height * hatchMark) / 40;\n\n          xPos = xPos * (1 - hatchLengthFactor); //make a point to the left of the center line\n          var hatch1 = new Paper.Point(xPos, yPos);\n          xPos = xPos * (1 + 2 * hatchLengthFactor); //make a point to the right of the center line\n          var hatch2 = new Paper.Point(xPos, yPos);\n          var connect = new Paper.Path.Line(hatch1, hatch2);\n          connect.strokeColor = \"black\";\n          connect.strokeWidth = 0.8;\n        }\n      }\n      //set bold lines\n      if (i === 0 || i === width) {\n        aLine.strokeWidth = 1.5;\n      }\n    }\n\n    //set up horizontal grid lines\n    var horizontalCenterLine = isSpectrumGraph ? height : height / 2;\n    for (i = 0; i <= height; i++) {\n      yPos = boundingRect.top + i * height_per_rectangle;\n      var leftPoint = new Paper.Point(boundingRect.left, yPos);\n      var rightPoint = new Paper.Point(boundingRect.right, yPos);\n      aLine = new Paper.Path.Line(leftPoint, rightPoint);\n      aLine.strokeColor = \"black\";\n      aLine.strokeWidth = 0.6;\n\n      //horizontal center line\n      if (i === horizontalCenterLine) {\n        aLine.strokeWidth = 1.5;\n\n        //create increments to space out hatch marks evenly\n        var incx = boundingRect.width / 40;\n\n        //already have yPos\n        xPos = boundingRect.left;\n        oldyPos = yPos;\n        oldxPos = xPos;\n        \n        //create hatch marks for horizontal center line\n        for (hatchMark = 1; hatchMark <= 40; hatchMark++) {\n          xPos = oldxPos;\n          yPos = oldyPos;\n\n          xPos = xPos + hatchMark * incx;\n          yPos = yPos * (1 - hatchLengthFactor); //make a point to the left of the center line\n          hatch1 = new Paper.Point(xPos, yPos);\n          yPos = yPos * (1 + 2 * hatchLengthFactor); //make a point to the right of the center line\n          hatch2 = new Paper.Point(xPos, yPos);\n          connect = new Paper.Path.Line(hatch1, hatch2);\n          connect.strokeColor = \"black\";\n          connect.strokeWidth = 0.8;\n        }\n      }\n      //set bold lines\n      if (i === 0 || i === height) {\n        aLine.strokeWidth = 2.5;\n      }\n    }\n  };\n  var numOfWBoxes = 10;\n  var numOfHBoxes = 8;\n  drawGridLines(numOfWBoxes, numOfHBoxes, Paper.view.bounds);\n\n  // Redraw on resize\n  Paper.view.on(\"resize\", function (event) {\n    graphLayer.activate();\n    graphLayer.removeChildren();\n    drawGridLines(numOfWBoxes, numOfHBoxes, Paper.view.bounds);\n  });\n};\n\nexport default DrawGraph;\n","/*\n  About: This file is used to create the triggers for the oscilloscope. This is done\n  with the use of PaperJS. How it all works is there is a hit box is moved, the the \n  trigger (the triangle and the dashed line) will move. Based of the position of \n  triangle is at, this value is then passed to wave.js to be used to move the buffer.\n*/\n\nimport Paper from \"paper\";\n\nconst clamp = (num, min, max) => Math.min(Math.max(num, min), max);\n\nconst HORIZONTAL = 0;\nconst VERTICAL = 1;\n\nclass Trigger {\n  constructor(axis) {\n    let numOfWBoxes = 10;\n    let numOfHBoxes = 8;\n\n    let length = 10;\n\n    this.axis = axis;\n\n    this.basePath = new Paper.Path({\n      segments: [[0, 0], [length, length], [length*2, 0]],\n      fillColor: 'black',\n      selected: false,\n      closed: true,\n      rotation: this.axis === HORIZONTAL ? 0 : -90,\n    });\n\n    this.selecting = false;\n    this.pos = 0.5;\n\n    if(this.axis === HORIZONTAL) {\n      this.basePath.position.x = Paper.view.bounds.width * this.pos;\n      this.basePath.position.y = length/2;\n    } else {\n      this.basePath.position.x = length/2;\n      this.basePath.position.y = Paper.view.bounds.height * (1 - this.pos);\n    }\n  }\n\n  mousedown(event) {\n    const hitOptions = {\n      stroke: true,\n      fill: true,\n      tolerance: 50,\n    }\n    \n    const hitDetected = this.basePath.hitTest(event.point, hitOptions);\n    this.selecting = hitDetected && hitDetected.item;\n  }\n\n  mousedrag(event) {\n    if(this.selecting) {\n      if(this.axis === HORIZONTAL) {\n        this.pos = clamp(event.point.x / Paper.view.bounds.width, 0.01, 0.99);\n        this.basePath.position.x = Paper.view.bounds.width * this.pos;\n      } else {\n        this.pos = 1 - clamp(event.point.y / Paper.view.bounds.height, 0.01, 0.99);\n        this.basePath.position.y = Paper.view.bounds.height * (1 - this.pos);\n      }\n\n      return this.pos;\n    }\n  }\n\n  mouseup(event) {\n    this.selecting = null;\n  }\n\n  resize(event) {\n    if(this.axis === HORIZONTAL) {\n      this.basePath.position.x = Paper.view.bounds.width * this.pos;\n    } else {\n      this.basePath.position.y = Paper.view.bounds.height * (1 - this.pos);\n    }\n  }\n}\n\nconst drawTriggers = (onUpdate) => {\n  let triggerLayer = new Paper.Layer();\n  let timePos = 0.5;\n  let voltPos = 0.5;\n  \n  let timeDiff = timePos - 0.5;\n  let voltDiff = voltPos - 0.5;\n\n  //Create trigger marks for demo\n  let timeTrigger = new Trigger(HORIZONTAL);\n  var voltTrigger = new Trigger(VERTICAL);\n\n  Paper.view.onMouseDown = function (event) {\n    timeTrigger.mousedown(event);\n    voltTrigger.mousedown(event);\n  }\n\n  Paper.view.onMouseDrag = function (event) {\n    timePos = timeTrigger.mousedrag(event) ?? timePos;\n    voltPos = voltTrigger.mousedrag(event) ?? voltPos;\n\n    timeDiff = timePos;\n    voltDiff = 2*voltPos - 1;\n\n    onUpdate(timeDiff, voltDiff);\n  }\n\n  Paper.view.onMouseUp = function (event) {\n    timeTrigger.mouseup(event);\n    voltTrigger.mouseup(event);\n  };\n\n  Paper.view.on('resize', function (event) {\n    triggerLayer.activate();\n\n    timeTrigger.resize(event);\n    voltTrigger.resize(event);\n  });\n}\n\nexport default drawTriggers;\n\n","/*\n  About: This file is used to create the cursors for the oscilloscope. This is done\n  with the use of PaperJS. How it all works is when the hit box is moved the cursor \n  (the circle and dashed line) will also move. Based of the position of dashed line,\n  the position value will be updated and the difference will be taken to display to \n  the user. The values that are exported from this file are just the difference \n  between the time and voltage cursors. All the math is done with in wave.js.\n*/\n\nimport Paper from \"paper\";\n\nconst clamp = (num, min, max) => Math.min(Math.max(num, min), max);\n\nlet cursorFlag = false;\n\nexport const setCursorFlag = (val) => cursorFlag = val;\n\nconst drawCursors = (onUpdate) => {\n  let cursorLayer = new Paper.Layer();\n\n  let timePos1 = .25;\n  let timePos2 = .75;\n  let voltPos1 = .25;\n  let voltPos2 = .75;\n\n  let timeCursorDiff = Math.abs(timePos1 - timePos2);\n  let voltCursorDiff = Math.abs(voltPos1 - voltPos2);\n\n  //Create cursor marks for demo\n  var timeCursorLine1 = new Paper.Path({\n    segments: [[Paper.view.bounds.width * timePos1, 0], [Paper.view.bounds.width * timePos1, Paper.view.bounds.height]],\n    selected: false\n  });\n  \n  timeCursorLine1.strokeColor = 'Black';\n  timeCursorLine1.strokeWidth = 3;\n  timeCursorLine1.strokeCap = 'round';\n  timeCursorLine1.dashArray = [10, 12];\n\n\n  var timeCursor1 = new Paper.Path.Circle({\n    center: Paper.view.center,\n    \n    radius: 15,\n    fillColor: 'red'\n  });\n\n  var timeCursorLine2 = new Paper.Path({\n    segments: [[Paper.view.bounds.width*timePos2, 0], [Paper.view.bounds.width*timePos2, Paper.view.bounds.height]],\n    selected: false\n  });\n  \n  timeCursorLine2.strokeColor = 'Black';\n  timeCursorLine2.strokeWidth = 3;\n  timeCursorLine2.strokeCap = 'round';\n  timeCursorLine2.dashArray = [10, 12];\n\n  var timeCursor2 = new Paper.Path.Circle({\n    center: Paper.view.center,\n    radius: 15,\n    fillColor: 'red'\n  });\n\n  var voltCursorLine1 = new Paper.Path({\n    segments: [[0, Paper.view.bounds.height *(1-voltPos1)], [Paper.view.bounds.width, Paper.view.bounds.height * (1-voltPos1)]],\n    selected: false\n  });\n  \n  voltCursorLine1.strokeColor = 'Black';\n  voltCursorLine1.strokeWidth = 3;\n  voltCursorLine1.strokeCap = 'round';\n  voltCursorLine1.dashArray = [10, 12];\n\n\n  var voltCursor1 = new Paper.Path.Circle({\n    center: Paper.view.center,\n    radius: 15,\n    fillColor: 'red'\n  });\n\n  var voltCursorLine2 = new Paper.Path({\n    segments: [[0, Paper.view.bounds.height*(1-voltPos2)], [Paper.view.bounds.width, Paper.view.bounds.height*(1-voltPos2)]],\n    selected: false\n  });\n  \n  voltCursorLine2.strokeColor = 'Black';\n  voltCursorLine2.strokeWidth = 3;\n  voltCursorLine2.strokeCap = 'round';\n  voltCursorLine2.dashArray = [10, 12];\n  \n  var voltCursor2 = new Paper.Path.Circle({\n    center: Paper.view.center,\n    radius: 15,\n    fillColor: 'red'\n  });\n\n  timeCursor1.position.x = Paper.view.bounds.width * timePos1;\n  timeCursor1.position.y = Paper.view.bounds.height;\n\n  voltCursor1.position.x = Paper.view.bounds.width;\n  voltCursor1.position.y = Paper.view.bounds.height * (1-voltPos1);\n\n  timeCursor2.position.x = Paper.view.bounds.width * timePos2;\n  timeCursor2.position.y = Paper.view.bounds.height;\n\n  voltCursor2.position.x = Paper.view.bounds.width;\n  voltCursor2.position.y = Paper.view.bounds.height * (1-voltPos2);\n  \n  timeCursor1.visible = cursorFlag;\n  timeCursor2.visible = cursorFlag;\n  voltCursor1.visible = cursorFlag;\n  voltCursor2.visible = cursorFlag;\n  timeCursorLine1.visible = cursorFlag;\n  timeCursorLine2.visible = cursorFlag;\n  voltCursorLine1.visible = cursorFlag;\n  voltCursorLine2.visible = cursorFlag;\n\n  onUpdate(timeCursorDiff, voltCursorDiff);\n\n\n  // Move cursor using touch\n  var hitOptions = {\n    stroke: true,\n    fill: true,\n    tolerance: 50,\n  }\n\n  var timeCursor1Active;\n  var voltCursor1Active;\n  var timeCursor2Active;\n  var voltCursor2Active;\n\n  Paper.view.on('mousedown', function(event) {\n    var timeHitResult1 = timeCursor1.hitTest(event.point, hitOptions);\n    timeCursor1Active = timeHitResult1 && timeHitResult1.item;\n\n    var voltHitResult1 = voltCursor1.hitTest(event.point, hitOptions);\n    voltCursor1Active = voltHitResult1 && voltHitResult1.item;\n\n    var timeHitResult2 = timeCursor2.hitTest(event.point, hitOptions);\n    timeCursor2Active = timeHitResult2 && timeHitResult2.item;\n\n    var voltHitResult2 = voltCursor2.hitTest(event.point, hitOptions);\n    voltCursor2Active = voltHitResult2 && voltHitResult2.item;\n\n  });\n\n  Paper.view.on('mousedrag', function(event) {\n    if (timeCursor1Active) {\n      timePos1 = clamp(event.point.x / Paper.view.bounds.width, 0.0, 1.0);\n      timeCursor1Active.position.x = Paper.view.bounds.width * timePos1;\n      timeCursorLine1.position.x = Paper.view.bounds.width * timePos1;\n    } else if (voltCursor1Active) {\n      voltPos1 = clamp((1 - (event.point.y / Paper.view.bounds.height)), 0.0, 1.0);\n      voltCursor1Active.position.y = Paper.view.bounds.height * (1 - voltPos1);\n      voltCursorLine1.position.y = Paper.view.bounds.height * (1 - voltPos1);\n      console.log(Paper.view.bounds.height);\n    } else if (timeCursor2Active) {\n      timePos2 = clamp(event.point.x / Paper.view.bounds.width, 0.0, 1.0);\n      timeCursor2Active.position.x = Paper.view.bounds.width * timePos2;\n      timeCursorLine2.position.x = Paper.view.bounds.width * timePos2;\n    } else if (voltCursor2Active) {\n      voltPos2 = clamp((1 - (event.point.y / Paper.view.bounds.height)), 0.0, 1.0);\n      voltCursor2Active.position.y = Paper.view.bounds.height * (1 - voltPos2);\n      voltCursorLine2.position.y = Paper.view.bounds.height * (1 - voltPos2);\n    }\n\n    timeCursorDiff = Math.abs(timePos1 - timePos2);\n    voltCursorDiff = Math.abs(voltPos1 - voltPos2);\n\n    onUpdate(timeCursorDiff, voltCursorDiff);\n\n  });\n\n  Paper.view.on('mouseup', function (event) {\n    timeCursor1Active = null;\n    voltCursor1Active = null;\n    timeCursor2Active = null;\n    voltCursor2Active = null;\n  });\n\n  \n  Paper.view.on('resize', function (event) {\n    cursorLayer.activate();\n    timeCursorLine1.remove();\n    timeCursorLine2.remove();\n    voltCursorLine1.remove();\n    voltCursorLine2.remove();\n\n    timeCursor1.remove();\n    timeCursor2.remove();\n    voltCursor1.remove();\n    voltCursor2.remove();\n\n    timeCursorLine1 = new Paper.Path({\n      segments: [[timePos1 * Paper.view.bounds.width, 0], [timePos1 * Paper.view.bounds.width, Paper.view.bounds.height]],\n      selected: false\n    });\n    \n    timeCursorLine1.strokeColor = 'Black';\n    timeCursorLine1.strokeWidth = 3;\n    timeCursorLine1.strokeCap = 'round';\n    timeCursorLine1.dashArray = [10, 12];\n  \n  \n    timeCursor1 = new Paper.Path.Circle({\n      center: Paper.view.center,\n      radius: 15,\n      fillColor: 'red'\n    });\n  \n    timeCursorLine2 = new Paper.Path({\n      segments: [[timePos2 * Paper.view.bounds.width, 0], [timePos2 * Paper.view.bounds.width, Paper.view.bounds.height]],\n      selected: false\n    });\n    \n    timeCursorLine2.strokeColor = 'Black';\n    timeCursorLine2.strokeWidth = 3;\n    timeCursorLine2.strokeCap = 'round';\n    timeCursorLine2.dashArray = [10, 12];\n  \n    timeCursor2 = new Paper.Path.Circle({\n      center: Paper.view.center,\n      radius: 15,\n      fillColor: 'red'\n    });\n  \n    voltCursorLine1 = new Paper.Path({\n      segments: [[0, (1-voltPos1) * Paper.view.bounds.height], [Paper.view.bounds.width, (1-voltPos1) * Paper.view.bounds.height]],\n      selected: false\n    });\n    \n    voltCursorLine1.strokeColor = 'Black';\n    voltCursorLine1.strokeWidth = 3;\n    voltCursorLine1.strokeCap = 'round';\n    voltCursorLine1.dashArray = [10, 12];\n  \n  \n    voltCursor1 = new Paper.Path.Circle({\n      center: Paper.view.center,\n      radius: 15,\n      fillColor: 'red'\n    });\n  \n    voltCursorLine2 = new Paper.Path({\n      segments: [[0, (1-voltPos2) * Paper.view.bounds.height], [Paper.view.bounds.width, (1-voltPos2) * Paper.view.bounds.height]],\n      selected: false\n    });\n    \n    voltCursorLine2.strokeColor = 'Black';\n    voltCursorLine2.strokeWidth = 3;\n    voltCursorLine2.strokeCap = 'round';\n    voltCursorLine2.dashArray = [10, 12];\n    \n    voltCursor2 = new Paper.Path.Circle({\n      center: Paper.view.center,\n      radius: 15,\n      fillColor: 'red'\n    });\n\n    timeCursor1.position.x = Paper.view.bounds.width * timePos1;\n    timeCursor1.position.y = Paper.view.bounds.height;\n  \n    voltCursor1.position.x = Paper.view.bounds.width;\n    voltCursor1.position.y = Paper.view.bounds.height * (1-voltPos1);\n  \n    timeCursor2.position.x = Paper.view.bounds.width * timePos2;\n    timeCursor2.position.y = Paper.view.bounds.height;\n  \n    voltCursor2.position.x = Paper.view.bounds.width;\n    voltCursor2.position.y = Paper.view.bounds.height * (1-voltPos2);\n\n    timeCursor1.visible = cursorFlag;\n    timeCursor2.visible = cursorFlag;\n    voltCursor1.visible = cursorFlag;\n    voltCursor2.visible = cursorFlag;\n    timeCursorLine1.visible = cursorFlag;\n    timeCursorLine2.visible = cursorFlag;\n    voltCursorLine1.visible = cursorFlag;\n    voltCursorLine2.visible = cursorFlag;\n  });\n\n  Paper.view.on('frame', function (event) {\n    timeCursor1.visible = cursorFlag;\n    timeCursor2.visible = cursorFlag;\n    voltCursor1.visible = cursorFlag;\n    voltCursor2.visible = cursorFlag;\n    timeCursorLine1.visible = cursorFlag;\n    timeCursorLine2.visible = cursorFlag;\n    voltCursorLine1.visible = cursorFlag;\n    voltCursorLine2.visible = cursorFlag;\n  });\n\n}\n\nexport default drawCursors;","/*\nThis file is used for exporting a .csv file from the oscilloscope\non mobile and browser. The exportCSV function takes in the buffer \nand places into a csv. For browser and Android will place the file \nin your downloads folder, and for iOS, the share file screen witch \nwill allow the users to select where they want to place the file.\n*/\n\nimport { isPlatform } from \"@ionic/core\";\n\nconst exportCSV = function (waveValues) {\n  //define the heading for each row of the data  \n  var csv = 'Point,Value\\n';\n\n  //merge the data with CSV  \n  for (let row = 0; row < waveValues.length; row++) {\n    csv += row + \",\" + waveValues[row];\n    csv += \"\\n\";\n  }\n\n\n  //display the created CSV data on the web browser   \n  const csvBlob = new Blob([csv], { type: \"text/csv\" });\n  const blobUrl = URL.createObjectURL(csvBlob);\n  const anchorElement = document.createElement(\"a\");\n\n  anchorElement.href = blobUrl;\n\n  var today = new Date();\n  var date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\n  var time = today.getHours() + \"_\" + today.getMinutes() + \"_\" + today.getSeconds();\n\n\n  var title = \"export data - \" + date + \" at \" + time + \".csv\";\n\n  const file = new File([csvBlob], \"export.csv\", { type: \"text/csv\" });\n\n  const shareData = {\n    // This doesnt work for some reason due to a TypeError. Maybe find an example that works\n    // files: [file],\n    // Hacky workaround below\n    text: csv,\n    title: \"Wave\"\n  };\n\n\n  if (isPlatform(\"android\")) {\n    let targetLoc = 'file:///storage/emulated/0/';\n\n    const failedWarning = function () {\n      alert(\"Save Failed!\");\n    }\n\n    window.resolveLocalFileSystemURL(targetLoc, function success(filesystem) {\n      filesystem.getDirectory('Download', { create: true, exclusive: false }, function (directory) {\n        directory.getFile(title, { create: true, exclusive: false }, function (fileEntry) {\n          fileEntry.createWriter(function (writer) {\n            writer.onwriteend = function () {\n              alert(\"File saved to downloads\");\n            };\n            writer.seek(0);\n            writer.write(csv);\n          }, failedWarning);\n        }, failedWarning);\n      }, failedWarning);\n    }, failedWarning);\n\n\n  } else if (isPlatform(\"ios\")) {\n    const failedWarning = function (error) {\n      if(error && error?.name === \"AbortError\") return;\n      alert('Sharing failed');\n    }\n\n    if (navigator.canShare && navigator.canShare(shareData)) {\n      navigator.share(shareData)\n        .then(() => alert('Share was successful.'))\n        .catch(failedWarning);\n\n    }\n    else {\n      alert(\"Sharing unsupported\");\n    }\n  } else {\n    anchorElement.download = title;\n    anchorElement.click();\n  }\n\n}\nexport default exportCSV;","/*\nThis file is used to display wave on the left side of the \nscreen on the oscilloscope page. This is done with the \nuse of paperJS and AudioContext. We will look for the \naccess to the users microphone, then for each (1/sampleRate) \nseconds we will pull in the current audio value. Theses vales \nare place in a buffer witch are then put on the graph to show \nthe current value of buffer.\n*/\n\nimport Paper from \"paper\";\nimport exportCSV from 'components/exportCSV';\n\nlet drawingWave = false;\nlet voltageDiv = .5;\nlet timeDiv = 1;\n\nlet timeDiff = 0.5;\nlet voltDiff = 0;\n\nlet autoset = false;\nlet maxPoint = 0;\nlet frequency = 0;\n\nlet mobile = false;\n\nconst bufferSize = 8192;\n\nlet sampleRate = 44100;\n\nlet fft = require('fft-js').fft;\nlet windowing = require('fft-windowing');\nlet windowType = \"Rectangle\";\nlet center = 538.330;\n\n//.707 VRMS = -1 to 1 V AC\n//No resistance (no adapter): 149 Hz\n//With resistance (adapter): 91 Hz\nconst voltageMultiplierConstant = .5 * .9;\n\nlet triggerPoint = null;\nlet triggerFlag = null;\nlet saveFlag = false;\n\nexport const setDrawWave = (val) => drawingWave = val;\nexport const setVoltageDiv = (val) => voltageDiv = val;\nexport const setTimeDiv = (val) => timeDiv = val;\nexport const setTriggers = (val1, val2) => { timeDiff = val1; voltDiff = val2; }\nexport const setAutoset = (val) => autoset = val;\nexport const setTriggerFlag = (val) => triggerFlag = val;\nexport const setSaveFlag = (val) => saveFlag = val;\nexport const setWindowType = (val) => windowType = val;\nexport const setCenter = (val) => center = val;\n\nconst drawWave = async (isSpectrumGraph, frequencyChangeCallback, autosetFinishCallback, timeDivChangeCallback, voltDivChangeCallback, saveFinishCallback) => {\n  let waveLayer = new Paper.Layer();\n\n  // Input buffer\n  let dataArray = new Float32Array(bufferSize);\n  let bufferIdx = 0;\n\n  let findTrigger = () => {\n    triggerPoint = null;\n    for(let i = Math.floor(dataArray.length/2); i < dataArray.length-1; i++){\n      let point1 = dataArray[i];\n      let point2 = dataArray[i+1];\n      //Rising Edge\n      if(triggerFlag === true){\n        if(point1 <= (voltDiff*voltageDiv)/voltageMultiplierConstant){\n          if(point2 > (voltDiff*voltageDiv)/voltageMultiplierConstant){\n            triggerPoint = i;\n            break;\n          }\n        }\n      } else {\n        //Falling Edge \n        if(point1 >= (voltDiff*voltageDiv)/voltageMultiplierConstant){\n          if(point2 < (voltDiff*voltageDiv)/voltageMultiplierConstant){\n            triggerPoint = i;\n            break;\n          }\n        }\n      }\n    }\n  };\n\n  let findMaxVoltage = () => {\n    maxPoint = .01;\n    for(let i = 0; i < dataArray.length; i++){\n      let point = Math.abs(dataArray[i]);\n      if (point > maxPoint) {\n        maxPoint = point;\n      }\n    }\n  }\n\n  let findFrequency = () => {\n    let crossCount = 0;\n    let firstIndex = -1;\n    let lastIndex = -1;\n    for(let i = 0; i < dataArray.length - 1; i++){\n      let point1 = dataArray[i];\n      let point2 = dataArray[i+1];\n      if (point1 === 0 || point1 < 0 && point2 > 0 || point1 > 0 && point2 < 0) {\n        if (crossCount === 0) {\n          firstIndex = i;\n        }\n        lastIndex = i;\n        crossCount++;\n      }\n    }\n\n    if (firstIndex === -1) {\n      frequency = 0;\n    } else {\n      frequency = sampleRate * .5 * (crossCount - 1) / (lastIndex - firstIndex);\n    }\n\n    frequencyChangeCallback(Math.round(frequency));\n  }\n\n  let applyWindow = () => {\n    if (windowType === \"Hanning\") {\n      dataArray = windowing.hann(dataArray);\n    }\n  };\n\n  if (window.audioinput) {\n    function startCapture() {\n      window.audioinput.start({\n        streamToWebAudio: false, bufferSize: bufferSize\n      });\n    }\n\n    window.audioinput.checkMicrophonePermission(function (hasPermission) {\n      \n      if (hasPermission) {\n        startCapture();\n      } else {\n        window.audioinput.getMicrophonePermission(function (hasPermission, message) {\n          if (hasPermission) {\n            startCapture();\n          } else {\n            console.log(\"Failed to obtain capture permission\");\n          }\n        });\n      }\n    });\n  } else {\n    var constraints = { audio: {autoGainControl: false, echoCancellation: false,  noiseSuppression: false}};\n    var drawWaveInterval;\n    await navigator.mediaDevices.getUserMedia(constraints)\n    .then(function(mediaStream) {\n      let ctx = new AudioContext({sampleRate: 44100});\n      sampleRate = ctx.sampleRate;\n      let mic = ctx.createMediaStreamSource(mediaStream);\n      let spe = ctx.createAnalyser();\n      spe.fftSize = bufferSize;\n      mic.connect(spe);\n\n      let osc = ctx.createOscillator();\n      osc.type = 'sine';\n      osc.frequency.value = 440;\n\n      drawWaveInterval = setInterval(() => {\n        // Skip if not drawing\n        if(drawingWave) {\n          bufferIdx = 0;\n          spe.getFloatTimeDomainData(dataArray);\n          if (isSpectrumGraph) {\n            applyWindow();\n            let response = fft(dataArray);\n            for (let i = 0; i < bufferSize; i++) {\n              let magnitude = Math.sqrt(Math.pow(response[i][0], 2) + Math.pow(response[i][1], 2));\n              dataArray[i] = magnitude;\n            }\n          }\n        }\n\n        findTrigger();\n        findMaxVoltage();\n        findFrequency();\n      }, 20);\n    })\n    .catch(function(err) { console.log(err.name + \": \" + err.message); }); // always check for errors at the end.\n  }\n\n  function Wave() {\n    this.amount = 200;\n    this.height = 10;\n    this.offsetX = 0;\n    this.waveSpeed = 3;\n    this.selected = false;\n\n    this._path = new Paper.Path({ fillColor: this.color });\n\n    this.init = function () {\n      this._path.strokeColor = \"#D00100\";\n      this._path.selected = this.selected;\n\n      this._path.segments = [];\n\n      // Cover entire horizontal screen space with points\n      for (let i = 0; i <= this.amount; i++) {\n        let point = new Paper.Point(i / this.amount * Paper.view.size.width,\n          1 / 2 * Paper.view.size.height);\n        this._path.add(point);\n      }\n    }\n\n    this.update = function (_event) {\n      let height = Paper.view.size.height;\n\n      if (autoset) {\n        let numOfIterations = 0;\n\n        let tempVoltDiv = Math.min(Math.max(Math.round(.5 * 10 * maxPoint) / 10, .1), 4.9);\n\n        let tempTimeDiv = 1;\n        let divider = .4536;\n        if (frequency < 440) {\n          let timeDividerConstant = 400;\n          tempTimeDiv = Math.round((timeDividerConstant / frequency)/divider);\n        }\n\n        autoset = false;\n        timeDivChangeCallback(tempTimeDiv);\n        voltDivChangeCallback(tempVoltDiv);\n        autosetFinishCallback();\n      }\n\n      if(saveFlag){\n        exportCSV(dataArray, mobile);\n        saveFlag = false;\n        saveFinishCallback();\n      }\n\n      if (isSpectrumGraph) {\n        // For the Spectrum Analyzer, loop through 200 points around the center frequency\n        const freqPerPoint = sampleRate / bufferSize;\n        let centerIdx = Math.floor(center / freqPerPoint);\n        let leftIdx = centerIdx - (100 * timeDiv);\n\n        for (let i = 0; i <= this.amount; i++) {\n          let bufferPoint = dataArray[timeDiv * i + leftIdx]; // timeDiv is a number between [1-20]\n          \n          // Flip vertically for rendering\n          bufferPoint = -bufferPoint / voltageDiv * voltageMultiplierConstant;\n\n          // Set the y coordinate of the ith segment point\n          let segment = this._path.segments[i];\n          segment.point.y = (bufferPoint + 1) * height;\n        }\n      } else {\n        // For the Oscope, Loop through every second point of the path to make waves:\n        for (let i = 0; i <= this.amount; i++) {\n          let segment = this._path.segments[i];\n          let startPoint = bufferIdx;\n          let timeOffset = 0;\n          if(triggerPoint != null){\n            startPoint = triggerPoint;\n            timeOffset = -((timeDiff * this.amount * timeDiv) | 0);\n          }\n\n          // Just use latest buffer data for now :)\n          let idx = timeOffset + startPoint + (i * timeDiv);\n          let bufferPoint = dataArray[idx];\n\n          // Flip vertically for rendering\n          bufferPoint = -bufferPoint / voltageDiv * voltageMultiplierConstant;\n\n          // Set the y coordinate of the ith segment point\n          segment.point.y = (bufferPoint + 1) * (height / 2);\n        }\n      }\n\n      if(drawingWave) {\n        bufferIdx += this.amount + 1;\n        bufferIdx %= dataArray.length;\n      }\n    }\n  }\n\n  var numOfWBoxes = 10;\n  var numOfHBoxes = 8;\n\n  var path1 = new Wave();\n  path1.color = 'blue';\n  path1.height = 10;\n  path1.init();\n\n\n  Paper.view.on('frame', function (event) {\n    waveLayer.activate();\n    path1.update(event);\n  });\n  \n\n  Paper.view.on('resize', function (event) {\n    waveLayer.activate();\n    path1.init();\n  });\n\n  // Return the ID of the drawWaveInterval so we can clear it on canvas reload.\n  return drawWaveInterval;\n};\n\nexport default drawWave;\n","import React, {useState} from 'react';\nimport { isPlatform, IonButtons, IonContent, IonHeader, IonMenuButton, IonPage, IonTitle, IonToolbar,\n  IonButton, IonPopover } from '@ionic/react';\nimport './OScope.css';\nimport Canvas from 'components/Canvas';\nimport WakeLock from 'components/WakeLock';\n\nconst OScope: React.FC = () => {\n  const name = \"Oscilloscope\";\n  const timeUnitDiv = 453.6;\n  const voltUnitDiv = .1;\n  const maxVolt = 5;\n  const minVolt = 0.1;\n  const [flag, setFlag] = useState(true);\n\n  const [fullscreenFlag, setFullscreenFlag] = useState(true);\n  const [displayFlag, setDisplayFlag] = useState(true);\n  const [voltageStart, setVoltageStart] = useState(.5);\n  const [timeStart, setTimeStart] = useState(1);\n  const [frequency, setFrequency] = useState(440);\n  const [triggerFlag, setTriggerFlag] = useState(true);\n  const [cursorFlag, setCursorFlag] = useState(false);\n  const [autoset, setAutoset] = useState(false);\n  const [timeDiff, setTimeDiff] = useState(0);\n  const [voltDiff, setVoltDiff] = useState(0);\n  const [saveFlag, setSaveFlag] = useState(false);\n  \n  function changeFrequency(frequency : number){\n    setFrequency(frequency);\n  }\n\n\n  function changeCursorDiff(timeDiff: number, voltDiff: number){\n    setTimeDiff(timeDiff);\n    setVoltDiff(voltDiff);\n  }\n\n  function changeVoltageInc(){\n    if((voltageStart+voltUnitDiv) <= maxVolt){\n      setVoltageStart(Math.round((voltageStart+voltUnitDiv)*10)/10)\n    }\n  }\n  function changeVoltageDec(){\n    if((voltageStart-voltUnitDiv) >= minVolt){\n      setVoltageStart(Math.round((voltageStart-voltUnitDiv)*10)/10)\n    }\n  }\n\n  function changeVoltageDiv(voltageDiv : number) {\n    setVoltageStart(voltageDiv)\n  }\n\n  function changeTimeInc(){\n    if(timeStart !== 80){\n      setTimeStart((prev) => prev+1)\n    }\n  }\n  function changeTimeDec(){\n    if(timeStart !== 1){\n      setTimeStart((prev) => prev-1)\n    }\n  }\n\n  function changeTimeDiv(timeDiv : number) {\n    setTimeStart(timeDiv)\n  }\n\n  function changeFlag(){\n    setFlag(!flag);\n  }\n\n  function changeDisplayFlag(){\n    setDisplayFlag(!displayFlag);\n  }\n\n  function changeFullscreenFlag(){\n    setFullscreenFlag(!fullscreenFlag);\n  }\n\n  function changeCursorFlag(){\n    setCursorFlag(!cursorFlag)\n  }\n\n  function toggleSaveButton() {\n    // Don't allow toggling off via button.\n    setSaveFlag(true);\n  }\n\n  function saveFinish() {\n    setSaveFlag(false);\n  }\n\n  const [triggerMenuPopoverState, setShowTriggerMenuPopover] = useState({ showPopover: false });\n\n  function toggleAutosetButton() {\n    // Don't allow toggling off via button.\n    setAutoset(true);\n  }\n\n  function autosetFinish() {\n    setAutoset(false);\n  }\n  \n  function popoverTriggerMenuSet(value: number) {\n    setShowTriggerMenuPopover({ showPopover: false });\n    if(value === 0 ){\n      setTriggerFlag(true);\n    }else if(value === 1) {\n      setTriggerFlag(false);\n    }\n  }\n\n  function calculateTime(){\n    return (timeStart*.4536*10*timeDiff).toFixed(4)\n  }\n  function calculateVoltage(){\n     return (voltageStart*8*voltDiff).toFixed(1)\n  }\n  function calculateTimeDivision(){\n     return (timeStart*.4536).toFixed(4)\n  }\n  function calculateVoltageDivison(){\n    return voltageStart.toFixed(1)\n  }\n  return (\n    <IonPage>\n      <IonHeader className={fullscreenFlag ? \"header\" : \"header-full\"}>\n        {/* Button for disabling fullscreen */}\n        <IonButton className={fullscreenFlag ? \"flscrn-button-graph-small\" : \"flscrn-button-hidden\"} mode=\"ios\" fill=\"clear\" onClick = {() => changeFullscreenFlag()}>\n          <img className=\"fullscreen-img\" src={process.env.PUBLIC_URL + \"/assets/fullscreenwhite.png\"} alt=\"\"></img>\n        </IonButton>\n        <IonToolbar mode=\"ios\" color=\"primary\">\n          <IonButtons slot=\"start\">\n            <IonMenuButton />\n          </IonButtons>\n          {/* <IonImg slot=\"end\" class={isPlatform(\"ios\") ? \"logo-ios\" : \"logo-md\"} src=\"assets/Husker_Scope_Logo_circle.png\"></IonImg> */}\n          <IonTitle> <b style={{fontWeight: \"bolder\"}}>Husker Scope</b>{\": \" + name}</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n\n      <IonContent fullscreen scrollY={false} color=\"secondary\">\n      <div className=\"full-screen\">\n\n        {/* The button for enabling fullscreen */}\n        <IonButton className={fullscreenFlag ? \"flscrn-button-hidden\" : \"flscrn-button-graph-full\"} mode=\"ios\" \n                   onClick = {() => changeFullscreenFlag()} fill=\"clear\">\n          <img className=\"fullscreen-img\" src={process.env.PUBLIC_URL + \"/assets/fullscreen2.png\"} alt=\"\"></img>\n        </IonButton>\n\n        {/* Button for toggling display on fullscreen */}\n        <IonButton className={fullscreenFlag ? \"fullscreen-display-button-hidden\" : \"fullscreen-display-button\" } \n                   onClick = {() => changeDisplayFlag()} mode=\"ios\" fill=\"clear\">\n          <img className=\"display-icon\" src={process.env.PUBLIC_URL + \"/assets/displayoff.png\"} alt=\"\"></img>\n        </IonButton>\n\n\n        {/* Display textbox for displaying frequency, Time Division, & Voltage Division */}\n        <label className={isPlatform(\"ios\") || isPlatform(\"android\") ? (displayFlag ? \"display-data-hidden\" : (fullscreenFlag ? \"display-data-hidden\" : \"display-data-full\")) : \n                                                                       (displayFlag ? \"display-data-hidden\" : (fullscreenFlag ? \"display-data-hidden\" : \"display-data-full-web\"))}>\n          <b>Frequency</b>: {frequency}Hz <br />\n          <b> Time Division</b>: {calculateTimeDivision()}ms <br />\n          <b> Voltage Division</b>: {calculateVoltageDivison()}V <br />\n          { cursorFlag ?\n              <>\n                <b> Voltage</b>: {calculateVoltage()}V <br />\n                <b> Time</b>: {calculateTime()}ms <br />\n              </>\n              : null\n          } \n        </label>\n\n        \n\n        {/* Makes it so the screen doesn't turn off when on the oscope page */}\n        <WakeLock enabled={true} />\n\n        {/* The graph element for the oscope */}\n        <div className={isPlatform(\"ios\") || isPlatform(\"android\") ? (fullscreenFlag ? \"oscilloscope-div\" : \"oscilloscope-div-full\") : \n                                                                     (fullscreenFlag ? \"oscilloscope-div-web\" : \"oscilloscope-div-full-web\")}>\n        <Canvas \n          className=\"oscope-graph\"\n          isFullscreen={fullscreenFlag} \n          playPauseFlag = {flag}\n          voltageDiv = {voltageStart}\n          timeDiv = {timeStart}\n          cursorChangeCallback = {changeCursorDiff}\n          frequencyChangeCallback = {changeFrequency}\n          timeDivChangeCallback = {changeTimeDiv}\n          voltageDivChangeCallback = {changeVoltageDiv}\n          autoset = {autoset}\n          autosetFinishCallback = {autosetFinish}\n          triggerFlag = {triggerFlag}\n          cursorFlag = {cursorFlag}\n          saveFlag = {saveFlag}\n          saveFinishCallback = {saveFinish}\n        />\n        </div>\n\n        {/* The buttons on the right hand side of the graph */}\n        <div className={isPlatform(\"ios\") || isPlatform(\"android\") ? (fullscreenFlag ? \"side-data\" : \"side-data-hidden\") : \n                                                                     (fullscreenFlag ? \"side-data-web\" : \"side-data-hidden\")}>\n          <div className=\"first-row-div\"> {/* First row of UI buttons */}\n            <IonButton class=\"utility-buttons\" mode=\"ios\" onClick = {() => toggleAutosetButton()} color={autoset ? \"primary\" : \"light\"} data-testid=\"autoset-button\">\n                <div>\n                  Auto\n                </div>\n            </IonButton>\n            <IonButton class=\"voltage-time-division-button\" mode=\"ios\" onClick = {() => changeVoltageInc()} color=\"tertiary\" data-testid=\"volt-div-pos-button\">\n              <div>\n                Volt/Div\n                <div>\n                  +{voltUnitDiv}V\n                  </div>\n              </div>\n            </IonButton>\n            <IonButton class=\"utility-buttons\" mode=\"ios\"  onClick = {() => changeCursorFlag()} color={cursorFlag ? \"primary\" : \"light\"} data-testid=\"cursor-button\">\n              <div>\n                Cursors\n              </div>\n            </IonButton>\n          </div>\n\n          <div className=\"second-row-div\"> {/* Second row of UI buttons */}\n          <IonButton class=\"voltage-time-division-button\" mode=\"ios\" onClick = {() => changeTimeDec()} color=\"tertiary\" data-testid=\"time-div-neg-button\">\n              <div>\n                Time/Div\n                <div>\n                  -{timeUnitDiv}us\n                </div>\n              </div>\n            </IonButton>\n            <IonButton id = \"pause-play-button\" class=\"pause-play-button\" mode=\"ios\" onClick = {() => changeFlag()} color={flag ? \"primary\" : \"tertiary\"} data-testid=\"pause-play-button\">\n              <div>\n                <img className=\"pause-play-img\" src={process.env.PUBLIC_URL + (flag ? \"/assets/pause.png\" : \"/assets/playwhite.png\")} alt=\"\" ></img>\n                <div>Run/Pause</div>\n              </div>\n            </IonButton>\n            <IonButton class=\"voltage-time-division-button\" mode=\"ios\" onClick = {() => changeTimeInc()} color=\"tertiary\" data-testid=\"time-div-pos-button\">\n              <div>\n                Time/Div\n                <div>\n                  +{timeUnitDiv}us\n                </div>\n              </div>\n            </IonButton>\n          </div>\n\n          <div className=\"third-row-div\"> {/* Third row of UI buttons */}\n            <IonButton class=\"utility-buttons\" mode=\"ios\" onClick = {() => toggleSaveButton()} color={saveFlag ? \"primary\" : \"light\"} data-testid=\"save-button\">\n                <div>\n                  Save\n                </div>\n            </IonButton>\n            <IonButton class=\"voltage-time-division-button\" mode=\"ios\" onClick = {() => changeVoltageDec()}  color=\"tertiary\" data-testid=\"volt-div-neg-button\">\n              <div>\n                Volt/Div\n                <div>\n                  -{voltUnitDiv}V\n                </div>\n              </div>\n            </IonButton>\n            <IonButton class=\"utility-buttons\" mode=\"ios\" color=\"light\" onClick={() => setShowTriggerMenuPopover({ showPopover: true })} data-testid=\"trigger-button\">\n              <div>\n                Trigger<br />Menu\n              </div>\n            </IonButton>\n          </div>\n          <div className=\"display-div\"> {/* Display Div */}\n            <span className=\"helper\" />\n            <label className={isPlatform(\"ios\") || isPlatform(\"android\") ? (fullscreenFlag ? \"display-data-main\" : \"display-data-hidden\") : \n                                                                           (fullscreenFlag ? \"display-data-main-web\" : \"display-data-hidden\")}>\n              <b>Frequency</b>: {frequency}Hz <br />\n              <b> Time Division</b>: {calculateTimeDivision()}ms <br />\n              <b> Voltage Division</b>: {calculateVoltageDivison()}V <br />\n              { cursorFlag ?\n                  <>\n                    <b> Voltage</b>: {calculateVoltage()}V <br />\n                    <b> Time</b>: {calculateTime()}ms <br />\n                  </>\n                  : null\n              } \n            </label>\n          \n          </div>\n        </div>\n      </div>\n        {/* Trigger Menu Popover */}\n        <IonPopover\n          isOpen={triggerMenuPopoverState.showPopover}\n          cssClass={isPlatform(\"ios\") || isPlatform(\"android\") ? \"input-popover2\" : \"input-popover2-web\"}\n          mode=\"ios\"\n          showBackdrop={true}\n          onDidDismiss={() => setShowTriggerMenuPopover({ showPopover: false })} data-testid=\"triggerMenu-popup\">\n          <div className=\"popover-content2\">\n            <IonButton class=\"trigger-popup-button\"\n              onClick={(e: any) => popoverTriggerMenuSet(0)} data-testid=\"Rising-confirm\">\n              Rising\n            </IonButton>\n            <IonButton class=\"trigger-popup-button\"\n              onClick={(e: any) => popoverTriggerMenuSet(1)} data-testid=\"Falling-confirm\">\n              Falling\n            </IonButton>\n            <IonButton class=\"trigger-popup-button\"\n              onClick={(e: any) => popoverTriggerMenuSet(2)} data-testid=\"Auto-confirm\">\n              Single-<br />Trigger\n            </IonButton>\n          </div>\n        </IonPopover>\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default OScope;\n","import React, { useState, useContext, useEffect, useCallback, useRef } from 'react';\n\nimport {\n    IonButtons, IonContent, IonHeader, IonMenuButton, IonPage, IonTitle, IonToolbar,\n    IonButton, IonImg, IonPopover, IonInput, IonRange, isPlatform\n} from '@ionic/react';\n\nimport {\n    AppContext, setCarrierFrequencyAction, setMessageFrequencyAction, setAmplitudeAction,\n    setCurrChannelAction, setChannelOutputtingAction,\n    getCarrierFrequency, getMessageFrequency, getAmplitude, getActiveChannel,\n    getTargetChannel, getOutputting, setModulationModeAction, getModulation,\n} from '../State';\n\nimport type { WAVETYPE } from '../State';\n\nimport { FunctionGeneratorAudio } from '../components/FunctionGeneratorAudio';\n\nimport './AMFM.css';\n\nconst AMFM: React.FC = () => {\n\n    const { state, dispatch } = useContext(AppContext);\n\n    // Effect for disabling channels outputting when leaving page\n    useEffect(() => {\n\n        // Cleanup\n        return () => {\n            dispatch(setChannelOutputtingAction(0, false));\n            dispatch(setChannelOutputtingAction(1, false));\n        }\n    }, [dispatch]);\n\n    const name = \"Amplitude Modulation/Frequency Modulation\";\n\n    // Selected channel obj\n    const activeChannel = getActiveChannel(state);\n\n    // Left-right channels\n    const chOne = getTargetChannel(state, 0);\n    const chTwo = getTargetChannel(state, 1);\n\n    // Get and set frequency\n    const frequency = getCarrierFrequency(activeChannel);\n    const setCarrierFrequency = useCallback((freq: number) => {\n        dispatch(setCarrierFrequencyAction(freq));\n    }, [dispatch]);\n\n    // Get both channel frequencies\n    const chOneFrequency = getCarrierFrequency(chOne);\n    const chTwoFrequency = getCarrierFrequency(chTwo);\n\n    // Get and set frequency\n    const messageFrequency = getMessageFrequency(activeChannel);\n    const setMessageFrequency = useCallback((msgFreq: number) => {\n        dispatch(setMessageFrequencyAction(msgFreq));\n    }, [dispatch]);\n\n    // Get both channel frequencies\n    const chOneMessageFrequency = getMessageFrequency(chOne);\n    const chTwoMessageFrequency = getMessageFrequency(chTwo);\n\n    // Get and set amplitude\n    const amplitude = getAmplitude(activeChannel);\n    const setAmplitude = useCallback((amp: number) => {\n        dispatch(setAmplitudeAction(Math.max(0, amp)));\n    }, [dispatch]);\n\n    // Get both channel amplitude\n    const chOneAmplitude = getAmplitude(chOne);\n    const chTwoAmplitude = getAmplitude(chTwo);\n\n    // Get and set current channel\n    const currChannel = state.currChannel;\n    const setCurrChannel = useCallback((channel: 0 | 1) => {\n        dispatch(setCurrChannelAction(channel));\n    }, [dispatch]);\n\n    // Get and set channels outputting\n    const chOneOutputting = getOutputting(chOne);\n    const chTwoOutputting = getOutputting(chTwo);\n\n    const toggleChOneOutputting = useCallback(() => {\n        dispatch(setChannelOutputtingAction(0, !chOneOutputting));\n    }, [chOneOutputting, dispatch]);\n\n    const toggleChTwoOutputting = useCallback(() => {\n        dispatch(setChannelOutputtingAction(1, !chTwoOutputting));\n    }, [chTwoOutputting, dispatch]);\n\n    const chOneModulation = getModulation(chOne);\n    const chTwoModulation = getModulation(chTwo);\n\n    const amChOneModulation = useCallback(() => {\n        dispatch(setModulationModeAction(true))\n    }, [dispatch]);\n\n    const fmChOneModulation = useCallback(() => {\n        dispatch(setModulationModeAction(false))\n    }, [dispatch]);\n\n    const amChTwoModulation = useCallback(() => {\n        dispatch(setModulationModeAction(true))\n    }, [dispatch]);\n\n    const fmChTwoModulation = useCallback(() => {\n        dispatch(setModulationModeAction(false))\n    }, [dispatch]);\n\n    const minFrequency = 549;\n\n    // For showing and hiding popovers  \n    const [frequencyPopoverState, setShowFrequencyPopover] = useState({ showPopover: false, frequency: 440 });\n    const [messageFrequencyPopoverState, setShowMessageFrequencyPopover] = useState({ showPopover: false, messageFrequency: 40 });\n    const [amplitudePopoverState, setShowAmplitudePopover] = useState({ showPopover: false, amplitude: 100 });\n\n    function popoverFrequencySet() {\n        setCarrierFrequency(frequencyPopoverState.frequency);\n        setShowFrequencyPopover({ showPopover: false, frequency: frequency });\n    }\n\n    function popoverMessageFrequencySet() {\n        setMessageFrequency(messageFrequencyPopoverState.messageFrequency);\n        setShowMessageFrequencyPopover({ showPopover: false, messageFrequency: messageFrequency });\n    }\n\n    function popoverAmplitudeSet() {\n        setAmplitude(amplitudePopoverState.amplitude);\n        setShowAmplitudePopover({ showPopover: false, amplitude: amplitude });\n    }\n\n    function keyUpHandler(event: React.KeyboardEvent<HTMLIonInputElement>, popover: string) {\n        if (event.key === \"Enter\") {\n            switch (popover) {\n                case \"cfrequency\": popoverFrequencySet(); break;\n                case \"mfrequency\": popoverMessageFrequencySet(); break;\n                case \"amplitude\": popoverAmplitudeSet(); break;\n            }\n        }\n    }\n\n    const inputFrequency = useRef<HTMLIonInputElement>(null!);\n    const inputMessageFrequency = useRef<HTMLIonInputElement>(null!);\n    const inputAmplitude = useRef<HTMLIonInputElement>(null!);\n\n    function frequencyInputFocus() {\n        inputFrequency.current.setFocus();\n    }\n\n    function messageFrequencyInputFocus() {\n        inputMessageFrequency.current.setFocus();\n    }\n\n    function amplitudeInputFocus() {\n        inputAmplitude.current.setFocus();\n    }\n\n    const chOneValues = { active: chOneOutputting, frequency: chOneFrequency, messageFrequency: chOneMessageFrequency, amplitude: chOneAmplitude / 100, phase: 0, waveform: \"custom\" as WAVETYPE, modulation: chOneModulation}\n    const chTwoValues = { active: chTwoOutputting, frequency: chTwoFrequency, messageFrequency: chTwoMessageFrequency, amplitude: chTwoAmplitude / 100, phase: 0, waveform: \"custom\" as WAVETYPE, modulation: chTwoModulation}\n\n    return (\n        <IonPage>\n            <IonHeader>\n                <IonToolbar mode=\"ios\" color=\"primary\">\n                    <IonButtons slot=\"start\">\n                        <IonMenuButton />\n                    </IonButtons>\n                    <IonTitle><b style={{fontWeight: \"bolder\"}}>Husker Scope</b>{\": \" + name}</IonTitle>\n                    <IonImg slot=\"end\" class=\"logo\" src={process.env.PUBLIC_URL + \"/assets/Husker_Scope_Logo_circle.png\"}></IonImg>\n                </IonToolbar>\n            </IonHeader>\n            <IonContent fullscreen scrollY={false} color=\"secondary\">\n                <FunctionGeneratorAudio chOne={chOneValues} chTwo={chTwoValues} />\n                <div className=\"frequency-waveform-channels-AMFM\">\n\n                    {/* Channel 1 Editing Button */}\n                    <div className=\"channel-div-AMFM\">\n                        <IonButton class=\"edit-button-L-AMFM\" mode=\"ios\" onClick={() => { setCurrChannel(0) }} color={currChannel === 0 ? \"primary\" : \"light\"} data-testid=\"left-edit\">\n                            <div className=\"edit-button-contents-AMFM\">\n                                CH1 <br /> \n                                C-FQ: {Math.round(chOneFrequency)} Hz <br /> \n                                M-FQ: {Math.round(chOneMessageFrequency)} Hz<br/> \n                                AMP: {chOneAmplitude}% <br />\n                                MODE: {chOneModulation ? \"AM\" : \"FM\"} <br />\n                            </div>\n                        </IonButton>\n                    </div>\n\n                    <div className=\"frequency-and-waveform-AMFM\">\n\n                        {/* Carrier Frequency Button and Slider */}\n                        <div className=\"frequency-button-div-AMFM\">\n                            <IonButton class=\"frequency-button-AMFM\" mode=\"ios\" color=\"light\" onClick={() => setShowFrequencyPopover({ showPopover: true, frequency: frequency })} data-testid=\"frequency-button\">\n                                Carrier Frequency: {Math.round(frequency)} Hz\n                            </IonButton>\n                        </div>\n\n                        <div>\n                            <IonRange class=\"range-frequency-AMFM\" mode=\"ios\" value={Math.log(frequency - minFrequency)} min={0} max={Math.log(20000 - minFrequency)} step={.0000000001} \n                                onIonChange={e => setCarrierFrequency(Math.exp(e.detail.value as any) + minFrequency)} data-testid=\"frequency-range\" />\n                        </div>\n\n                        {/* Message Frequency Button and Slider */}\n                        <div className=\"message-frequency-button-div-AMFM\">\n                            <IonButton class=\"message-frequency-button-AMFM\" mode=\"ios\" color=\"light\" onClick={() => setShowMessageFrequencyPopover({ showPopover: true, messageFrequency: messageFrequency })} \n                                data-testid=\"message-frequency-button\">\n                                Message Frequency: {Math.round(messageFrequency)} Hz\n                            </IonButton>\n                        </div>\n\n                        <div>\n                            <IonRange class=\"range-message-frequency-AMFM\" mode=\"ios\" value={messageFrequency} min={1} max={frequency / 10} step={.0000000001} \n                                onIonChange={e => setMessageFrequency(e.detail.value as any)} data-testid=\"message-frequency-range\" />\n                        </div>\n                    </div>\n\n                    {/* Channel 2 Editing Button */}\n                    <div className=\"channel-div-AMFM\">\n                        <IonButton class=\"edit-button-R-AMFM\" mode=\"ios\" onClick={() => { setCurrChannel(1) }} color={currChannel === 1 ? \"primary\" : \"light\"} data-testid=\"right-edit\">\n                            <div className=\"edit-button-contents-AMFM\">\n                                CH2 <br /> \n                                C-FQ: {Math.round(chTwoFrequency)} Hz <br /> \n                                M-FQ: {Math.round(chTwoMessageFrequency)} Hz<br/> \n                                AMP: {chTwoAmplitude}% <br />\n                                MODE: {chTwoModulation ? \"AM\" : \"FM\"} <br />\n                            </div>\n                        </IonButton>\n                    </div>\n\n                </div>\n\n                {/* Amplitude, Start/Stop Buttons, Phase */}\n                <div className=\"amplitude-start-phase-AMFM\">\n\n                    {/* Amplitude Button and Slider */}\n                    <div className=\"amplitude-components2-AMFM\">\n                        <IonButton class=\"amplitude-button-AMFM\" mode=\"ios\" color=\"light\" onClick={() => setShowAmplitudePopover({ showPopover: true, amplitude: amplitude })} data-testid=\"amplitude-button\">\n                            Amplitude: {amplitude}%\n                        </IonButton>\n                        <IonRange class=\"range-amplitude-AMFM\" mode=\"ios\" value={amplitude} min={0} max={100} step={1} onIonChange={e => setAmplitude(e.detail.value as any)} data-testid=\"amplitude-range\" />\n                    </div>\n\n                    {/* Play/Pause Buttons */}\n                    <div className=\"start-buttons-AMFM\">\n                        {/* CH1 Play/Pause Button */}\n                        <IonButton class=\"hold-button-AMFM\" mode=\"ios\" onClick={() => { toggleChOneOutputting() }} color={chOneOutputting ? \"primary\" : \"light\"} data-testid=\"left-play\">\n                            <div className=\"edit-button-contents-AMFM\">\n                                CH1\n                                <img className=\"play-pause-img-AMFM\" src={process.env.PUBLIC_URL + (chOneOutputting ? \"/assets/pause.png\" : \"/assets/play.png\")} alt=\"\" ></img>\n                            </div>\n                        </IonButton>\n\n                        {/* CH2 Play/Pause Button */}\n                        <IonButton class=\"hold-button-AMFM\" mode=\"ios\" onClick={() => { toggleChTwoOutputting() }} color={chTwoOutputting ? \"primary\" : \"light\"} data-testid=\"right-play\">\n                            <div className=\"edit-button-contents-AMFM\">\n                                CH2\n                                <img className=\"play-pause-img-AMFM\" src={process.env.PUBLIC_URL + (chTwoOutputting ? \"/assets/pause.png\" : \"/assets/play.png\")} alt=\"\" ></img>\n                            </div>\n                        </IonButton>\n                    </div>\n\n                    <div className=\"AMFM-toggle-div\">\n                        <IonButton class=\"modulation-button-AMFM\" mode=\"ios\" onClick={() => { currChannel ? amChTwoModulation() : amChOneModulation() }} color={currChannel ? (chTwoModulation ? \"primary\" : \"light\") : (chOneModulation ? \"primary\" : \"light\")} data-testid=\"modulation-button\">\n                            <div className=\"edit-button-contents-AMFM\">\n                                AM\n                            </div>\n                        </IonButton>\n                        <IonButton class=\"modulation-button-AMFM\" mode=\"ios\" onClick={() => { currChannel ? fmChTwoModulation() : fmChOneModulation() }} color={currChannel ? (chTwoModulation ? \"light\" : \"primary\") : (chOneModulation ? \"light\" : \"primary\")} data-testid=\"modulation-button2\">\n                            <div className=\"edit-button-contents-AMFM\">\n                                FM\n                            </div>\n                        </IonButton>\n                    </div>\n                </div>\n\n                {/* Carrier Frequency Popover */}\n                <IonPopover\n                    isOpen={frequencyPopoverState.showPopover}\n                    cssClass={(isPlatform(\"android\") || isPlatform(\"ios\"))? \"input-popover-AMFM\" : \"input-popover-AMFM-web\"}\n                    mode=\"ios\"\n                    showBackdrop={true}\n                    onDidPresent={() => frequencyInputFocus()}\n                    onDidDismiss={() => setShowFrequencyPopover({ showPopover: false, frequency: frequency })} data-testid=\"frequency-popup\">\n                    <div className=\"popover-div-AMFM\">\n                        <IonInput ref={inputFrequency} class=\"input-popover-text-AMFM\" type=\"number\" inputmode=\"numeric\" placeholder=\"550 to 20000 Hz\"\n                            onIonChange={e => setShowFrequencyPopover((state) => { return { ...state, frequency: parseInt(e.detail.value!, 10) } })}\n                            onKeyUp={e => keyUpHandler(e, \"cfrequency\")}\n                        ></IonInput>\n                        <IonButton\n                            onClick={(e: any) => popoverFrequencySet()} data-testid=\"frequency-confirm\">\n                            CONFIRM\n                        </IonButton>\n                    </div>\n                </IonPopover>\n\n                {/* Message Frequency Popover */}\n                <IonPopover\n                    isOpen={messageFrequencyPopoverState.showPopover}\n                    cssClass={(isPlatform(\"android\") || isPlatform(\"ios\"))? \"input-popover-AMFM\" : \"input-popover-AMFM-web\"}\n                    mode=\"ios\"\n                    showBackdrop={true}\n                    onDidPresent={() => messageFrequencyInputFocus()}\n                    onDidDismiss={() => setShowMessageFrequencyPopover({ showPopover: false, messageFrequency: messageFrequency })} data-testid=\"message-frequency-popup\">\n                    <div className=\"popover-div-AMFM\">\n                        <IonInput ref={inputMessageFrequency} class=\"input-popover-text-AMFM\" type=\"number\" inputmode=\"numeric\" placeholder={\"1 to \" + Math.round(frequency / 10) + \" Hz\"}\n                            onIonChange={e => setShowMessageFrequencyPopover((state) => { return { ...state, messageFrequency: parseInt(e.detail.value!, 10) } })}\n                            onKeyUp={e => keyUpHandler(e, \"mfrequency\")}\n                        ></IonInput>\n                        <IonButton\n                            onClick={(e: any) => popoverMessageFrequencySet()} data-testid=\"message-frequency-confirm\">\n                            CONFIRM\n                        </IonButton>\n                    </div>\n                </IonPopover>\n\n                {/* Amplitude Popover */}\n                <IonPopover\n                    isOpen={amplitudePopoverState.showPopover}\n                    cssClass={(isPlatform(\"android\") || isPlatform(\"ios\"))? \"input-popover-AMFM\" : \"input-popover-AMFM-web\"}\n                    mode=\"ios\"\n                    showBackdrop={true}\n                    onDidPresent={() => amplitudeInputFocus()}\n                    onDidDismiss={() => setShowAmplitudePopover({ showPopover: false, amplitude: frequency })} data-testid=\"amplitude-popup\">\n                    <div className=\"popover-div-AMFM\">\n                        <IonInput ref={inputAmplitude} class=\"input-popover-text-AMFM\" type=\"number\" inputmode=\"numeric\" placeholder=\"0 to 100\"\n                            onIonChange={e => setShowAmplitudePopover((state) => { return { ...state, amplitude: parseInt(e.detail.value!, 10) } })}\n                            onKeyUp={e => keyUpHandler(e, \"amplitude\")}\n                        ></IonInput>\n                        <IonButton onClick={(e: any) => popoverAmplitudeSet()} data-testid=\"amplitude-confirm\">\n                            CONFIRM\n                        </IonButton>\n                    </div>\n                </IonPopover>\n            </IonContent>\n        </IonPage>\n    );\n};\n\nexport default AMFM;\n","import React, {useRef, useState} from 'react';\nimport { isPlatform, IonButtons, IonContent, IonHeader, IonMenuButton, IonPage, IonTitle, IonToolbar,\n  IonButton, IonPopover, IonImg, IonInput } from '@ionic/react';\nimport './SpectrumAnalyzer.css';\nimport Canvas from 'components/Canvas';\nimport WakeLock from 'components/WakeLock';\n\nconst SpectrumAnalyzer: React.FC = () => {\n  const name = \"Spectrum Analyzer\";\n  const POINTS_DIV = 20\n  const FREQ_POINT = 44100 / 8192; // TODO Change with fft size\n  const FREQ_DIV = POINTS_DIV * FREQ_POINT\n  const MAX_FREQ_DIV_COUNT = 20;\n  const MIN_FREQ_DIV_COUNT = 1;\n  const [flag, setFlag] = useState(true);\n\n  const [fullscreenFlag, setFullscreenFlag] = useState(true);\n  const [displayFlag, setDisplayFlag] = useState(true);\n  const [voltageStart, setVoltageStart] = useState(5.0);\n  const [freqCount, setFreqCount] = useState(1);\n  const [frequency, setFrequency] = useState(440);\n  const [fftSize, setFFTSize] = useState(8192);\n  const [center, setCenter] = useState(FREQ_DIV * 5);\n  const [windowType, setWindowType] = useState(\"Rectangle\");\n  const [cursorFlag, setCursorFlag] = useState(false);\n  const [autoset, setAutoset] = useState(false);\n  const [freqDiff, setFreqDiff] = useState(0);\n  const [voltDiff, setVoltDiff] = useState(0);\n  const [saveFlag, setSaveFlag] = useState(false);\n  \n  function changeFrequency(frequency : number){\n    setFrequency(frequency);\n  }\n\n  function changeCursorDiff(freqDiff: number, voltDiff: number){\n    setFreqDiff(freqDiff);\n    setVoltDiff(voltDiff);\n  }\n\n  function changeVoltageDiv(voltageDiv : number) {\n    setVoltageStart(voltageDiv)\n  }\n\n  function changeFreqInc(){\n    if(freqCount < MAX_FREQ_DIV_COUNT){\n      setFreqCount((prev) => prev+1)\n    }\n  }\n  \n  function changeFreqDec(){\n    if(freqCount > MIN_FREQ_DIV_COUNT){\n      setFreqCount((prev) => prev-1)\n    }\n  }\n\n  function changeFreqDiv(freqDiv : number) {\n    setFreqCount(freqDiv)\n  }\n\n  function changeFlag(){\n    setFlag(!flag);\n  }\n\n  function changeDisplayFlag(){\n    setDisplayFlag(!displayFlag);\n  }\n\n  function changeFullscreenFlag(){\n    setFullscreenFlag(!fullscreenFlag);\n  }\n\n  function changeCursorFlag(){\n    setCursorFlag(!cursorFlag)\n  }\n\n  function toggleSaveButton() {\n    // Don't allow toggling off via button.\n    setSaveFlag(true);\n  }\n\n  function saveFinish() {\n    setSaveFlag(false);\n  }\n\n  const [fftSizeMenuPopoverState, setShowFFTSizeMenuPopover] = useState({ showPopover: false });\n  const [centerPopoverState, setShowCenterPopover] = useState({ showPopover: false, center: 0 });\n  const [windowPopoverState, setShowWindowPopover] = useState({ showPopover: false, windowType: windowType });\n\n  function popoverCenterSet() {\n    setCenter(centerPopoverState.center);\n    console.log(\"Center has been set to: \" + centerPopoverState.center + \"hz\");\n    setShowCenterPopover({ showPopover: false, center: center });\n  }\n\n  function toggleAutosetButton() {\n    // Don't allow toggling off via button.\n    setAutoset(true);\n  }\n\n  function autosetFinish() {\n    setAutoset(false);\n  }\n  \n  function popoverFFTSizeMenuSet(value: number) {\n    // Number given in this case is the number of datapoints for the FFT (powers of 2).\n    setShowFFTSizeMenuPopover({ showPopover: false });\n    setFFTSize(value);\n    console.log(\"FFT Size has been set to: \" + value);\n  }\n\n  function popoverWindowSet(value: string) {\n    // Number given in this case (for now and should be temporary) is a string. Ex: 'rectangle'.\n    setShowWindowPopover({ showPopover: false, windowType: value });\n    setWindowType(value);\n    console.log(\"Window type has been set to: \" + value);\n  }\n\n  // Setting focus of the center popover\n  const inputCenter = useRef<HTMLIonInputElement>(null!);\n  function centerInputFocus() {\n    inputCenter.current.setFocus();\n  }\n\n  function keyUpHandler(event: React.KeyboardEvent<HTMLIonInputElement>, popover: string) {\n    if (event.key === \"Enter\") {\n      switch (popover) {\n        case \"center\": popoverCenterSet(); break;\n      }\n    }\n  }\n\n  function calculateAmplitude() {\n    return (voltageStart*8*voltDiff).toFixed(1)\n  }\n  function calculateFrequency(){\n    return (freqCount*FREQ_DIV*10*freqDiff).toFixed(3)\n  }\n  function calculateFrequencyDivision(){\n    return (freqCount*FREQ_DIV).toFixed(3)\n  }\n  function calculateAmplitudeDivision(){\n    return voltageStart.toFixed(1)\n  }\n  \n\n  return (\n    <IonPage>\n      <IonHeader className={fullscreenFlag ? \"header\" : \"header-full\"}>\n        {/* Button for disabling fullscreen */}\n        {/* <IonButton className={fullscreenFlag ? \"flscrn-button-graph-small\" : \"flscrn-button-hidden\"} mode=\"ios\" fill=\"clear\" onClick = {() => changeFullscreenFlag()}>\n          <img className=\"fullscreen-img\" src={process.env.PUBLIC_URL + \"/assets/fullscreenwhite.png\"} alt=\"\"></img>\n        </IonButton> */}\n        <IonToolbar mode=\"ios\" color=\"primary\">\n          <IonButtons slot=\"start\">\n            <IonMenuButton />\n          </IonButtons>\n          <IonTitle> <b style={{fontWeight: \"bolder\"}}>Husker Scope</b>{\": \" + name}</IonTitle>\n          <IonImg slot=\"end\" class=\"logo\" src={process.env.PUBLIC_URL + \"/assets/Husker_Scope_Logo_circle.png\"}></IonImg>\n        </IonToolbar>\n      </IonHeader>\n\n      <IonContent fullscreen scrollY={false} color=\"secondary\">\n      <div className=\"full-screen\">\n\n        {/* The button for enabling fullscreen */}\n        <IonButton className={fullscreenFlag ? \"flscrn-button-hidden\" : \"flscrn-button-graph-full\"} mode=\"ios\" \n                   onClick = {() => changeFullscreenFlag()} fill=\"clear\">\n          <img className=\"fullscreen-img\" src={process.env.PUBLIC_URL + \"/assets/fullscreen2.png\"} alt=\"\"></img>\n        </IonButton>\n\n        {/* Button for toggling display on fullscreen */}\n        <IonButton className={fullscreenFlag ? \"fullscreen-display-button-hidden\" : \"fullscreen-display-button\" } \n                   onClick = {() => changeDisplayFlag()} mode=\"ios\" fill=\"clear\">\n          <img className=\"display-icon\" src={process.env.PUBLIC_URL + \"/assets/displayoff.png\"} alt=\"\"></img>\n        </IonButton>\n\n\n        {/* Display textbox for displaying frequency, Frequency Division, & Voltage Division */}\n        <label className={isPlatform(\"ios\") || isPlatform(\"android\") ? (displayFlag ? \"display-data-hidden\" : (fullscreenFlag ? \"display-data-hidden\" : \"display-data-full\")) : \n                                                                       (displayFlag ? \"display-data-hidden\" : (fullscreenFlag ? \"display-data-hidden\" : \"display-data-full-web\"))}>\n          {/* <b>Frequency</b>: {frequency}Hz <br /> */}\n          <b> Freq Division</b>: {calculateFrequencyDivision()}Hz <br />\n          <b> Amplitude Division</b>: {calculateAmplitudeDivision()}V <br />\n          <b> Center</b>: {center.toFixed(3)}Hz <br />\n          <b> Window</b>: {windowType} <br />\n          <b> FFT Size</b>: {fftSize} <br />\n\n          { cursorFlag ?\n              <>\n                <b> Amplitude</b>: {calculateAmplitude()}V <br />\n                <b> Frequency</b>: {calculateFrequency()}Hz <br />\n              </>\n              : null\n          } \n        </label>\n\n        {/* Makes it so the screen doesn't turn off when on the oscope page */}\n        <WakeLock enabled={true} />\n\n        {/* The graph element for the spectrum analyzer */}\n        <div className={isPlatform(\"ios\") || isPlatform(\"android\") ? (fullscreenFlag ? \"oscilloscope-div\" : \"oscilloscope-div-full\") : \n                                                                     (fullscreenFlag ? \"oscilloscope-div-web\" : \"oscilloscope-div-full-web\")}>\n        <Canvas \n          className=\"spectrum-graph\"\n          isFullscreen={fullscreenFlag} \n          playPauseFlag = {flag}\n          voltageDiv = {voltageStart}\n          timeDiv = {freqCount}\n          cursorChangeCallback = {changeCursorDiff}\n          frequencyChangeCallback = {changeFrequency}\n          timeDivChangeCallback = {changeFreqDiv}\n          voltageDivChangeCallback = {changeVoltageDiv}\n          autoset = {autoset}\n          autosetFinishCallback = {autosetFinish}\n          cursorFlag = {cursorFlag}\n          saveFlag = {saveFlag}\n          saveFinishCallback = {saveFinish}\n          windowType = {windowType}\n          center = {center}\n        />\n        </div>\n\n        {/* The buttons on the right hand side of the graph */}\n        <div className={isPlatform(\"ios\") || isPlatform(\"android\") ? (fullscreenFlag ? \"side-data\" : \"side-data-hidden\") : \n                                                                     (fullscreenFlag ? \"side-data-web\" : \"side-data-hidden\")}>\n          <div className=\"first-row-div\"> {/* First row of UI buttons */}\n            <IonButton class=\"utility-buttons\" mode=\"ios\" onClick = {() => toggleAutosetButton()} color={autoset ? \"primary\" : \"light\"} data-testid=\"autoset-button\">\n                <div>\n                  Auto\n                </div>\n            </IonButton>\n            <IonButton class=\"voltage-time-division-button\" mode=\"ios\" onClick={() => setShowFFTSizeMenuPopover({ showPopover: true })} color=\"tertiary\" data-testid=\"FFT-size-button\">\n              <div>\n                FFT Size\n              </div>\n            </IonButton>\n            <IonButton class=\"utility-buttons\" mode=\"ios\"  onClick = {() => changeCursorFlag()} color={cursorFlag ? \"primary\" : \"light\"} data-testid=\"cursor-button\">\n              <div>\n                Cursors\n              </div>\n            </IonButton>\n          </div>\n\n          <div className=\"second-row-div\"> {/* Second row of UI buttons */}\n          <IonButton class=\"voltage-time-division-button\" mode=\"ios\" onClick = {() => changeFreqDec()} color=\"tertiary\" data-testid=\"time-div-neg-button\">\n              <div>\n                Freq/Div\n                <div>\n                  -{FREQ_DIV.toFixed(3)}Hz\n                </div>\n              </div>\n            </IonButton>\n            <IonButton id = \"pause-play-button\" class=\"pause-play-button\" mode=\"ios\" onClick = {() => changeFlag()} color={flag ? \"primary\" : \"tertiary\"} data-testid=\"pause-play-button\">\n              <div>\n                <img className=\"pause-play-img\" src={process.env.PUBLIC_URL + (flag ? \"/assets/pause.png\" : \"/assets/playwhite.png\")} alt=\"\" ></img>\n                <div>Run/Pause</div>\n              </div>\n            </IonButton>\n            <IonButton class=\"voltage-time-division-button\" mode=\"ios\" onClick = {() => changeFreqInc()} color=\"tertiary\" data-testid=\"time-div-pos-button\">\n              <div>\n                Freq/Div\n                <div>\n                  +{FREQ_DIV.toFixed(3)}Hz\n                </div>\n              </div>\n            </IonButton>\n          </div>\n\n          <div className=\"third-row-div\"> {/* Third row of UI buttons */}\n            <IonButton class=\"utility-buttons\" mode=\"ios\" onClick = {() => toggleSaveButton()} color={saveFlag ? \"primary\" : \"light\"} data-testid=\"save-button\">\n                <div>\n                  Save\n                </div>\n            </IonButton>\n            <IonButton class=\"voltage-time-division-button\" mode=\"ios\" onClick={() => setShowCenterPopover({ showPopover: true, center: center })}  color=\"tertiary\" data-testid=\"center-button\">\n              <div>\n                Center\n              </div>\n            </IonButton>\n            <IonButton class=\"utility-buttons\" mode=\"ios\" onClick={() => setShowWindowPopover({ showPopover: true, windowType: windowType })} color=\"light\" data-testid=\"window-button\">\n              <div>\n                Window\n              </div>\n            </IonButton>\n          </div>\n          <div className=\"display-div\"> {/* Display Div */}\n            <span className=\"helper\" />\n            <label className={isPlatform(\"ios\") || isPlatform(\"android\") ? (fullscreenFlag ? \"display-data-main\" : \"display-data-hidden\") : \n                                                                           (fullscreenFlag ? \"display-data-main-web\" : \"display-data-hidden\")}>\n              <b> Freq Division</b>: {calculateFrequencyDivision()}Hz <br />\n              <b> Amplitude Division</b>: {calculateAmplitudeDivision()}V <br />\n              <b> Center</b>: {center.toFixed(3)}Hz <br />\n              <b> Window</b>: {windowType} <br />\n              <b> FFT Size</b>: {fftSize} <br />\n              { cursorFlag ?\n                  <>\n                    <b> Amplitude</b>: {calculateAmplitude()}V <br />\n                    <b> Frequency</b>: {calculateFrequency()}Hz <br />\n                  </>\n                  : null\n              } \n            </label>\n          </div>\n        </div>\n      </div>\n\n      {/* Center Popover */}\n      <IonPopover\n          isOpen={centerPopoverState.showPopover}\n          cssClass={isPlatform(\"ios\") || isPlatform(\"android\") ? \"input-popover\" : \"input-popover-web\"}\n          mode=\"ios\"\n          showBackdrop={true}\n          onDidPresent={() => centerInputFocus()}\n          onDidDismiss={() => setShowCenterPopover({ showPopover: false, center: center })} data-testid=\"center-popup\">\n          <div className=\"popover-content\">\n            <IonInput ref={inputCenter} class=\"input-popover-text\" type=\"number\" inputmode=\"numeric\" placeholder=\"0 to 20000 Hz\"\n              onIonChange={e => setShowCenterPopover((state) => { return { ...state, center: parseInt(e.detail.value!, 10) } })}\n              onKeyUp={e => keyUpHandler(e, \"center\")}\n            ></IonInput>\n            <IonButton\n              onClick={(e: any) => popoverCenterSet()} data-testid=\"center-confirm\">\n              CONFIRM\n            </IonButton>\n          </div>\n        </IonPopover>\n\n        {/* FFT Size Menu Popover */}\n        <IonPopover\n          isOpen={fftSizeMenuPopoverState.showPopover}\n          cssClass={isPlatform(\"ios\") || isPlatform(\"android\") ? \"input-popover2\" : \"input-popover2-web\"}\n          mode=\"ios\"\n          showBackdrop={true}\n          onDidDismiss={() => setShowFFTSizeMenuPopover({ showPopover: false })} data-testid=\"triggerMenu-popup\">\n          <div className=\"popover-content2\" style={{marginBottom: \"0px\"}}>\n            <IonButton class=\"trigger-popup-button\"\n              onClick={(e: any) => popoverFFTSizeMenuSet(512)} data-testid=\"Rising-confirm\">\n              512\n            </IonButton>\n            <IonButton class=\"trigger-popup-button\"\n              onClick={(e: any) => popoverFFTSizeMenuSet(1024)} data-testid=\"Falling-confirm\">\n              1024\n            </IonButton>\n            <IonButton class=\"trigger-popup-button\"\n              onClick={(e: any) => popoverFFTSizeMenuSet(2048)} data-testid=\"Auto-confirm\">\n              2048\n            </IonButton>\n          </div>\n          <div className=\"popover-content2\" style={{marginTop: \"0px\"}}>\n            <IonButton class=\"trigger-popup-button\"\n              onClick={(e: any) => popoverFFTSizeMenuSet(4096)} data-testid=\"Auto-confirm\">\n              4096\n            </IonButton>\n            <IonButton class=\"trigger-popup-button\"\n              onClick={(e: any) => popoverFFTSizeMenuSet(8192)} data-testid=\"Auto-confirm\">\n              8192\n            </IonButton>\n            <IonButton class=\"trigger-popup-button\"\n              onClick={(e: any) => popoverFFTSizeMenuSet(16384)} data-testid=\"Auto-confirm\">\n              16384\n            </IonButton>\n          </div>\n        </IonPopover>\n\n        {/* Window Menu Popover */}\n        <IonPopover\n          isOpen={windowPopoverState.showPopover}\n          cssClass={isPlatform(\"ios\") || isPlatform(\"android\") ? \"input-popover2\" : \"input-popover2-web\"}\n          mode=\"ios\"\n          showBackdrop={true}\n          onDidDismiss={() => setShowWindowPopover({ showPopover: false, windowType: windowType })} data-testid=\"triggerMenu-popup\">\n          <div className=\"popover-content2\">\n            <IonButton class=\"trigger-popup-button\"\n              onClick={(e: any) => popoverWindowSet(\"Rectangle\")} data-testid=\"rectangle-confirm\">\n              Rectangle\n            </IonButton>\n            <IonButton class=\"trigger-popup-button\"\n              onClick={(e: any) => popoverWindowSet(\"Hanning\")} data-testid=\"hanning-confirm\">\n              Hanning\n            </IonButton>\n          </div>\n        </IonPopover>\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default SpectrumAnalyzer;\n","import React, {useState} from 'react';\nimport { isPlatform, IonButtons, IonContent, IonHeader, IonMenuButton, IonPage, IonTitle, IonToolbar,\n  IonButton, IonPopover, IonImg } from '@ionic/react';\nimport './LogicAnalyzer.css';\nimport Canvas from 'components/Canvas';\nimport WakeLock from 'components/WakeLock';\n\nconst SpectrumAnalyzer: React.FC = () => {\n  const name = \"Logic Analyzer\";\n  const timeUnitDiv = 453.6;\n  const voltUnitDiv = .1;\n  const maxVolt = 5;\n  const minVolt = 0.1;\n  const [flag, setFlag] = useState(true);\n\n  const [fullscreenFlag, setFullscreenFlag] = useState(true);\n  const [displayFlag, setDisplayFlag] = useState(true);\n  const [voltageStart, setVoltageStart] = useState(.5);\n  const [timeStart, setTimeStart] = useState(1);\n  const [frequency, setFrequency] = useState(440);\n  const [triggerFlag, setTriggerFlag] = useState(true);\n  const [cursorFlag, setCursorFlag] = useState(false);\n  const [autoset, setAutoset] = useState(false);\n  const [timeDiff, setTimeDiff] = useState(0);\n  const [voltDiff, setVoltDiff] = useState(0);\n  const [saveFlag, setSaveFlag] = useState(false);\n  \n  function changeFrequency(frequency : number){\n    setFrequency(frequency);\n  }\n\n\n  function changeCursorDiff(timeDiff: number, voltDiff: number){\n    setTimeDiff(timeDiff);\n    setVoltDiff(voltDiff);\n  }\n\n  function changeVoltageInc(){\n    if((voltageStart+voltUnitDiv) <= maxVolt){\n      setVoltageStart(Math.round((voltageStart+voltUnitDiv)*10)/10)\n    }\n  }\n  function changeVoltageDec(){\n    if((voltageStart-voltUnitDiv) >= minVolt){\n      setVoltageStart(Math.round((voltageStart-voltUnitDiv)*10)/10)\n    }\n  }\n\n  function changeVoltageDiv(voltageDiv : number) {\n    setVoltageStart(voltageDiv)\n  }\n\n  function changeTimeInc(){\n    if(timeStart !== 80){\n      setTimeStart((prev) => prev+1)\n    }\n  }\n  function changeTimeDec(){\n    if(timeStart !== 1){\n      setTimeStart((prev) => prev-1)\n    }\n  }\n\n  function changeTimeDiv(timeDiv : number) {\n    setTimeStart(timeDiv)\n  }\n\n  function changeFlag(){\n    setFlag(!flag);\n  }\n\n  function changeDisplayFlag(){\n    setDisplayFlag(!displayFlag);\n  }\n\n  function changeFullscreenFlag(){\n    setFullscreenFlag(!fullscreenFlag);\n  }\n\n  function changeCursorFlag(){\n    setCursorFlag(!cursorFlag)\n  }\n\n  function toggleSaveButton() {\n    // Don't allow toggling off via button.\n    setSaveFlag(true);\n  }\n\n  function saveFinish() {\n    setSaveFlag(false);\n  }\n\n  const [triggerMenuPopoverState, setShowTriggerMenuPopover] = useState({ showPopover: false });\n\n  function toggleAutosetButton() {\n    // Don't allow toggling off via button.\n    setAutoset(true);\n  }\n\n  function autosetFinish() {\n    setAutoset(false);\n  }\n  \n  function popoverTriggerMenuSet(value: number) {\n    setShowTriggerMenuPopover({ showPopover: false });\n    if(value === 0 ){\n      setTriggerFlag(true);\n    }else if(value === 1) {\n      setTriggerFlag(false);\n    }\n  }\n\n  return (\n    <IonPage>\n      <IonHeader className={fullscreenFlag ? \"header\" : \"header-full\"}>\n        {/* Button for disabling fullscreen */}\n        {/* <IonButton className={fullscreenFlag ? \"flscrn-button-graph-small\" : \"flscrn-button-hidden\"} mode=\"ios\" fill=\"clear\" onClick = {() => changeFullscreenFlag()}>\n          <img className=\"fullscreen-img\" src={process.env.PUBLIC_URL + \"/assets/fullscreenwhite.png\"} alt=\"\"></img>\n        </IonButton> */}\n        <IonToolbar mode=\"ios\" color=\"primary\">\n          <IonButtons slot=\"start\">\n            <IonMenuButton />\n          </IonButtons>\n          <IonTitle> <b style={{fontWeight: \"bolder\"}}>Husker Scope</b>{\": \" + name}</IonTitle>\n          <IonImg slot=\"end\" class=\"logo\" src={process.env.PUBLIC_URL + \"/assets/Husker_Scope_Logo_circle.png\"}></IonImg>\n        </IonToolbar>\n      </IonHeader>\n\n      <IonContent fullscreen scrollY={false} color=\"secondary\">\n      <div className=\"full-screen\">\n\n        {/* The button for enabling fullscreen */}\n        <IonButton className={fullscreenFlag ? \"flscrn-button-hidden\" : \"flscrn-button-graph-full\"} mode=\"ios\" \n                   onClick = {() => changeFullscreenFlag()} fill=\"clear\">\n          <img className=\"fullscreen-img\" src={process.env.PUBLIC_URL + \"/assets/fullscreen2.png\"} alt=\"\"></img>\n        </IonButton>\n\n        {/* Button for toggling display on fullscreen */}\n        <IonButton className={fullscreenFlag ? \"fullscreen-display-button-hidden\" : \"fullscreen-display-button\" } \n                   onClick = {() => changeDisplayFlag()} mode=\"ios\" fill=\"clear\">\n          <img className=\"display-icon\" src={process.env.PUBLIC_URL + \"/assets/displayoff.png\"} alt=\"\"></img>\n        </IonButton>\n\n\n        {/* Display textbox for displaying frequency, Time Division, & Voltage Division */}\n        <label className={isPlatform(\"ios\") || isPlatform(\"android\") ? (displayFlag ? \"display-data-hidden\" : (fullscreenFlag ? \"display-data-hidden\" : \"display-data-full\")) : \n                                                                       (displayFlag ? \"display-data-hidden\" : (fullscreenFlag ? \"display-data-hidden\" : \"display-data-full-web\"))}>\n          <b>Frequency</b>: {frequency}Hz <br />\n          <b> Time Division</b>: {(timeStart*.4536).toFixed(4)}ms <br />\n          <b> Voltage Division</b>: {voltageStart.toFixed(1)}V <br />\n          { cursorFlag ?\n              <>\n                <b> Voltage</b>: {(voltageStart*8*voltDiff).toFixed(1)}V <br />\n                <b> Time</b>: {(timeStart*.4536*10*timeDiff).toFixed(4)}ms <br />\n              </>\n              : null\n          } \n        </label>\n\n        \n\n        {/* Makes it so the screen doesn't turn off when on the oscope page */}\n        <WakeLock enabled={true} />\n\n        {/* The graph element for the oscope */}\n        <div className={isPlatform(\"ios\") || isPlatform(\"android\") ? (fullscreenFlag ? \"oscilloscope-div\" : \"oscilloscope-div-full\") : \n                                                                     (fullscreenFlag ? \"oscilloscope-div-web\" : \"oscilloscope-div-full-web\")}>\n        <Canvas \n          className=\"oscope-graph\"\n          isFullscreen={fullscreenFlag} \n          playPauseFlag = {flag}\n          voltageDiv = {voltageStart}\n          timeDiv = {timeStart}\n          cursorChangeCallback = {changeCursorDiff}\n          frequencyChangeCallback = {changeFrequency}\n          timeDivChangeCallback = {changeTimeDiv}\n          voltageDivChangeCallback = {changeVoltageDiv}\n          autoset = {autoset}\n          autosetFinishCallback = {autosetFinish}\n          triggerFlag = {triggerFlag}\n          cursorFlag = {cursorFlag}\n          saveFlag = {saveFlag}\n          saveFinishCallback = {saveFinish}\n        />\n        </div>\n\n        {/* The buttons on the right hand side of the graph */}\n        <div className={isPlatform(\"ios\") || isPlatform(\"android\") ? (fullscreenFlag ? \"side-data\" : \"side-data-hidden\") : \n                                                                     (fullscreenFlag ? \"side-data-web\" : \"side-data-hidden\")}>\n          <div className=\"first-row-div\"> {/* First row of UI buttons */}\n            <IonButton class=\"utility-buttons\" mode=\"ios\" onClick = {() => toggleAutosetButton()} color={autoset ? \"primary\" : \"light\"} data-testid=\"util-1-button\">\n                <div>\n                  Auto\n                </div>\n            </IonButton>\n            <IonButton class=\"voltage-time-division-button\" mode=\"ios\" onClick = {() => changeVoltageInc()} color=\"tertiary\" data-testid=\"volt-div-pos-button\">\n              <div>\n                Volt/Div\n                <div>\n                  +{voltUnitDiv}V\n                  </div>\n              </div>\n            </IonButton>\n            <IonButton class=\"utility-buttons\" mode=\"ios\"  onClick = {() => changeCursorFlag()} color={cursorFlag ? \"primary\" : \"light\"} data-testid=\"util-2-button\">\n              <div>\n                Cursors\n              </div>\n            </IonButton>\n          </div>\n\n          <div className=\"second-row-div\"> {/* Second row of UI buttons */}\n          <IonButton class=\"voltage-time-division-button\" mode=\"ios\" onClick = {() => changeTimeDec()} color=\"tertiary\" data-testid=\"time-div-neg-button\">\n              <div>\n                Time/Div\n                <div>\n                  -{timeUnitDiv}us\n                </div>\n              </div>\n            </IonButton>\n            <IonButton id = \"pause-play-button\" class=\"pause-play-button\" mode=\"ios\" onClick = {() => changeFlag()} color={flag ? \"primary\" : \"tertiary\"} data-testid=\"pause-play-button\">\n              <div>\n                <img className=\"pause-play-img\" src={process.env.PUBLIC_URL + (flag ? \"/assets/pause.png\" : \"/assets/playwhite.png\")} alt=\"\" ></img>\n                <div>Run/Pause</div>\n              </div>\n            </IonButton>\n            <IonButton class=\"voltage-time-division-button\" mode=\"ios\" onClick = {() => changeTimeInc()} color=\"tertiary\" data-testid=\"time-div-pos-button\">\n              <div>\n                Time/Div\n                <div>\n                  +{timeUnitDiv}us\n                </div>\n              </div>\n            </IonButton>\n          </div>\n\n          <div className=\"third-row-div\"> {/* Third row of UI buttons */}\n            <IonButton class=\"utility-buttons\" mode=\"ios\" onClick = {() => toggleSaveButton()} color={saveFlag ? \"primary\" : \"light\"} data-testid=\"util-4-button\">\n                <div>\n                  Save\n                </div>\n            </IonButton>\n            <IonButton class=\"voltage-time-division-button\" mode=\"ios\" onClick = {() => changeVoltageDec()}  color=\"tertiary\" data-testid=\"volt-div-neg-button\">\n              <div>\n                Volt/Div\n                <div>\n                  -{voltUnitDiv}V\n                </div>\n              </div>\n            </IonButton>\n            <IonButton class=\"utility-buttons\" mode=\"ios\" color=\"light\" onClick={() => setShowTriggerMenuPopover({ showPopover: true })} data-testid=\"util-6-button\">\n              <div>\n                Trigger<br />Menu\n              </div>\n            </IonButton>\n          </div>\n          <div className=\"display-div\"> {/* Display Div */}\n            <span className=\"helper\" />\n            <label className={isPlatform(\"ios\") || isPlatform(\"android\") ? (fullscreenFlag ? \"display-data-main\" : \"display-data-hidden\") : \n                                                                           (fullscreenFlag ? \"display-data-main-web\" : \"display-data-hidden\")}>\n              <b>Frequency</b>: {frequency}Hz <br />\n              <b> Time Division</b>: {(timeStart*.4536).toFixed(4)}ms <br />\n              <b> Voltage Division</b>: {voltageStart.toFixed(1)}V <br />\n              { cursorFlag ?\n                  <>\n                    <b> Voltage</b>: {(voltageStart*8*voltDiff).toFixed(1)}V <br />\n                    <b> Time</b>: {(timeStart*.4536*10*timeDiff).toFixed(4)}ms <br />\n                  </>\n                  : null\n              } \n            </label>\n          \n          </div>\n        </div>\n      </div>\n        {/* Trigger Menu Popover */}\n        <IonPopover\n          isOpen={triggerMenuPopoverState.showPopover}\n          cssClass={isPlatform(\"ios\") || isPlatform(\"android\") ? \"input-popover2\" : \"input-popover2-web\"}\n          mode=\"ios\"\n          showBackdrop={true}\n          onDidDismiss={() => setShowTriggerMenuPopover({ showPopover: false })} data-testid=\"triggerMenu-popup\">\n          <div className=\"popover-content2\">\n            <IonButton class=\"trigger-popup-button\"\n              onClick={(e: any) => popoverTriggerMenuSet(0)} data-testid=\"Rising-confirm\">\n              Rising\n            </IonButton>\n            <IonButton class=\"trigger-popup-button\"\n              onClick={(e: any) => popoverTriggerMenuSet(1)} data-testid=\"Falling-confirm\">\n              Falling\n            </IonButton>\n            <IonButton class=\"trigger-popup-button\"\n              onClick={(e: any) => popoverTriggerMenuSet(2)} data-testid=\"Auto-confirm\">\n              Single-<br />Trigger\n            </IonButton>\n          </div>\n        </IonPopover>\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default SpectrumAnalyzer;\n","import { IonButtons, IonContent, IonHeader, IonMenuButton, IonPage, IonTitle, IonToolbar, IonImg} from '@ionic/react';\nimport './Tutorial.css';\n\n\nconst Tutorial: React.FC = () => {\n  const name = \"Tutorial\";\n\n\n  return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar mode=\"ios\" color=\"primary\">\n          <IonButtons slot=\"start\">\n            <IonMenuButton />\n          </IonButtons>\n          <IonTitle> <b style={{fontWeight: \"bolder\"}}>Husker Scope</b>{\": \" + name}</IonTitle>\n          <IonImg slot=\"end\" class=\"nebraska-n\" src={process.env.PUBLIC_URL + \"/assets/Husker_Scope_Logo_circle.png\"}></IonImg>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent fullscreen scrollY={true} color=\"secondary\">\n        <div className='tutorial-page'>\n          <div className=\"main-div\">\n            <div className=\"intro-div\">\n              <p> &emsp;This page serves as a tutorial for what all the buttons on the Function Generator and Oscilloscope do. First will be an \n                  image of the Function Generator with what all the buttons on the UI do. Following that, there will be a picture of the Oscilloscope with information \n                  on what the buttons do. We hope it's of help!\n              </p>\n            </div>\n            <div>\n\n              <div className='fg-tutorial-img-div'>\n                <IonImg className=\"fg-tutorial-img\" src={process.env.PUBLIC_URL + \"/assets/function_generator_tutorial.png\"} />\n              </div>\n              \n              <ol>\n                <li>These buttons are to select which channel the user wants to edit.</li>\n                <li>This button serves the purpose of displaying the frequency of the channel and if it is pressed, a popup is displayed that allows for an exact \n                    frequency to be entered using the keyboard.</li>\n                <li>This button serves the purpose of displaying the amplitude of the channel and if it is pressed, a popup is displayed that allows for an exact \n                    amplitude to be entered using the keyboard.</li>\n                <li>This button serves the purpose of displaying the phase of the channel and if it is pressed, a popup is displayed that allows for an exact \n                    phase to be entered using the keyboard. <br /> Note: The sliders underneath the previous 3 buttons are for changing the values of frequency, \n                    amplitude, and phase respectively.</li>\n                <li>The four waveform buttons are used for setting the waveform for the currently selected channel.</li>\n                <li>These two buttons are for playing and pause the output on the respective channels.</li>\n              </ol>\n\n              <div className='os-tutorial-img-div'>\n                <IonImg className=\"os-tutorial-img\" src={process.env.PUBLIC_URL + \"/assets/oscope_tutorial.png\"} />\n              </div>\n\n              <ol>\n                <li>This is the oscilloscope graph, which is where the wave is displayed.</li>\n                <li>The small triangles on the top and left of the graph are the oscilloscope's triggers.</li>\n                <li>The red half-circles on the sides of the graph are the oscilloscope's cursors.</li>\n                <li>This is a data display which is used for displaying the frequency, time division, volt division, and if the cursors are enabled it also \n                    displays the voltage and time measures.</li>\n                <li>This button and the one below the run/pause button are used for increasing and decreasing the voltage division.</li>\n                <li>This button and the one to the right of the run/pause button are used for decreasing and increasing the time division.</li>\n                <li>This is the run/pause button. If the button is red, the graph will update. If it is white, the graph will be paused.</li>\n                <li>This button is used for autosetting the graph.</li>\n                <li>This button enables and disables the cursors on the graph. If the button is red, the cursors are enabled. If the button is white, the cursors are diabled.</li>\n                <li>Save button: In progress</li>\n                <li>This button displays a Trigger Menu that has the options for changing between rising and falling edge and single trigger.</li>\n                <li>This button changes the graph to fullscreen. After the graph is in fullscreen, there is a button in the same location that disables the fullscreen. <br />\n                    Note: When the graph is in fullscreen, the button below the fullscreen button enables and disables the data display.</li>\n              </ol>\n              \n              <div className='os-tutorial-img-div'>\n                <IonImg className=\"os-tutorial-img\" src={process.env.PUBLIC_URL + \"/assets/am.png\"} />\n              </div>\n\n              <ol>\n                <li>These buttons are to select which channel the user wants to edit.</li>\n                <li>This button defines the carrier frequency for the current channel.</li> {/* Carrier Frequency Here */}\n                <li>This buttons defines the message frequency for the current channel.</li> {/* Message Frequency Here */}\n                <li>This button serves the purpose of displaying the amplitude of the channel and if it is pressed, a popup is displayed that allows for an exact \n                    amplitude to be entered using the keyboard.</li>\n                    <li>This button switches the modulation mode, from amplitude modulation to frequency modulation.</li> {/* AM button Here */}\n                <li>These two buttons are for playing and pause the output on the respective channels.</li>\n           \n              </ol>\n\n              <div className='os-tutorial-img-div'>\n                <IonImg className=\"os-tutorial-img\" src={process.env.PUBLIC_URL + \"/assets/circuit_diagram_rotated.png\"} />\n              </div>\n\n              <ul>\n                <li>10k is a 10 kilo ohm resistor</li>      \n                <li>2k is a 2 kilo ohm resistor</li>      \n                <li>RL is a switch. This will switch between left and right channel</li>      \n                <li>S, R2, R1, T, are all breakout pins for verifying correct input</li>      \n              </ul>\n\n            </div>\n          </div>\n        </div>\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default Tutorial;\n","import { IonButtons, IonContent, IonHeader, IonMenuButton, IonPage, IonTitle, IonToolbar, IonImg} from '@ionic/react';\nimport './About.css';\n\n\nconst About: React.FC = () => {\n  const name = \"About\";\n\n\n  return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar mode=\"ios\" color=\"primary\">\n          <IonButtons slot=\"start\">\n            <IonMenuButton />\n          </IonButtons>\n          <IonTitle> <b style={{fontWeight: \"bolder\"}}>Husker Scope</b>{\": \" + name}</IonTitle>\n          <IonImg slot=\"end\" class=\"nebraska-n\" src={process.env.PUBLIC_URL + \"/assets/Husker_Scope_Logo_circle.png\"}></IonImg>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent fullscreen scrollY={true} color=\"secondary\">\n        <div className=\"content\">\n          <div className=\"overview\">Project Overview</div>\n          <div className=\"project-vision\">Project Vision</div>\n          <div className=\"project-justification\">Project Justification</div>\n        </div>\n        <div className=\"content\">\n          <div className=\"overview-text\">Husker Scope is an iOS and Android application that serves as a dual channel function generator and single channel oscilloscope. The dual channel function generator is able to output sine, square, sawtooth and triangle waveforms with a range of 20 to 20,000 Hz. The phase, amplitude and frequency are able to be adjusted within the application. The oscilloscope will show time and volts per division as well as cursors for signal measurement, pause and image export, and triggering.</div>\n          <div className=\"outer\">\n            <div className=\"project-vision-text\">To provide a free and cross-platform application containing a function generator and oscilloscope that will be available to UNL students and Engineering students across the globe.</div>\n            <IonImg slot=\"end\" class=\"logo-about\" src={process.env.PUBLIC_URL + \"/assets/Husker_Scope_Logo_rounded_corners.png\"}></IonImg>\n          </div>\n          <div className=\"project-justification-text\">There are a variety of Function Generators and Oscilloscopes on both the iOS and Google Play store, but most of the iOS applications need to be purchased and Husker Scope is a one stop shop for all function generator and oscilloscope needs on both the iOS and Google Play store. Additionally, most applications require additional hardware to be purchased for proper functionality, but the Husker O-Scope will function through the use of a standard 3.5mm audio jack.</div>        \n        </div>\n        <div className=\"link-text\"> \n          More information about the app and project can be found at <a href=\"https://www.huskerscope.com\" target=\"_blank\" rel=\"noreferrer\">huskerscope.com</a>\n        </div>\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default About;\n","import { IonApp, IonRouterOutlet, IonSplitPane} from '@ionic/react';\nimport { IonReactRouter } from '@ionic/react-router';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport { useEffect } from 'react';\nimport { Plugins } from '@capacitor/core';\nimport Menu from './components/Menu';\nimport FunctionGenerator from './pages/FunctionGenerator';\nimport OScope from './pages/OScope';\nimport AMFM from './pages/AMFM';\nimport SpectrumAnalyzer from 'pages/SpectrumAnalyzer';\nimport LogicAnalyzer from 'pages/LogicAnalyzer';\nimport Tutorial from './pages/Tutorial';\nimport About from './pages/About';\n\n/* Core CSS required for Ionic components to work properly */\nimport '@ionic/react/css/core.css';\n\n/* Basic CSS for apps built with Ionic */\nimport '@ionic/react/css/normalize.css';\nimport '@ionic/react/css/structure.css';\nimport '@ionic/react/css/typography.css';\n\n/* Optional CSS utils that can be commented out */\nimport '@ionic/react/css/padding.css';\nimport '@ionic/react/css/float-elements.css';\nimport '@ionic/react/css/text-alignment.css';\nimport '@ionic/react/css/text-transformation.css';\nimport '@ionic/react/css/flex-utils.css';\nimport '@ionic/react/css/display.css';\n\n/* Theme variables */\nimport './theme/variables.css';\n\nimport './App.css';\n\nimport { AppContextProvider } from './State';\nimport { isPlatform, getPlatforms } from '@ionic/core';\n\n\nconst App: React.FC = () => {\n  useEffect(() => {\n    // Setup handling for backbutton.\n    const listener = (ev: Event) => {\n      (ev as CustomEvent).detail.register(-1, () => {\n        Plugins.App.exitApp();\n      })\n    };\n\n    document.addEventListener('ionBackButton', listener);\n\n    return () => {\n      document.removeEventListener('ionBackButton', listener);\n    };\n  }, []);\n\n  return (\n    <AppContextProvider>\n    <IonApp className={isPlatform(\"android\") || isPlatform(\"ios\") ? \"\" : \"web-zoom\"} >\n      <IonReactRouter basename={process.env.PUBLIC_URL}>\n        <IonSplitPane contentId=\"main\" disabled={true}>\n          <Menu />\n          <IonRouterOutlet mode=\"md\" id=\"main\">\n            <Switch>\n            <Route path=\"/\" exact={true}>\n              <Redirect to=\"/page/FunctionGenerator\" />\n            </Route>\n            <Route path=\"/page/FunctionGenerator\" exact={true}>\n              <FunctionGenerator />\n            </Route>\n            <Route path=\"/page/OScope\" exact={true}>\n              <OScope />\n            </Route>\n            <Route path=\"/page/AMFM\" exact={true}>\n            <AMFM />\n            </Route>\n            <Route path=\"/page/SpectrumAnalyzer\" exact={true}>\n              <SpectrumAnalyzer />\n            </Route>\n            <Route path=\"/page/LogicAnalyzer\" exact={true}>\n              <LogicAnalyzer />\n            </Route>\n            <Route path=\"/page/Tutorial\" exact={true}>\n              <Tutorial />\n            </Route>\n            <Route path=\"/page/About\" exact={true}>\n              <About />\n            </Route>\n            </Switch>\n          </IonRouterOutlet>\n        </IonSplitPane>\n      </IonReactRouter>\n    </IonApp>\n    </AppContextProvider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","var map = {\n\t\"./ion-action-sheet.entry.js\": [\n\t\t121,\n\t\t5\n\t],\n\t\"./ion-alert.entry.js\": [\n\t\t122,\n\t\t6\n\t],\n\t\"./ion-app_8.entry.js\": [\n\t\t123,\n\t\t7\n\t],\n\t\"./ion-avatar_3.entry.js\": [\n\t\t124,\n\t\t17\n\t],\n\t\"./ion-back-button.entry.js\": [\n\t\t125,\n\t\t18\n\t],\n\t\"./ion-backdrop.entry.js\": [\n\t\t126,\n\t\t43\n\t],\n\t\"./ion-button_2.entry.js\": [\n\t\t127,\n\t\t19\n\t],\n\t\"./ion-card_5.entry.js\": [\n\t\t128,\n\t\t20\n\t],\n\t\"./ion-checkbox.entry.js\": [\n\t\t129,\n\t\t21\n\t],\n\t\"./ion-chip.entry.js\": [\n\t\t130,\n\t\t22\n\t],\n\t\"./ion-col_3.entry.js\": [\n\t\t131,\n\t\t44\n\t],\n\t\"./ion-datetime_3.entry.js\": [\n\t\t132,\n\t\t10\n\t],\n\t\"./ion-fab_3.entry.js\": [\n\t\t133,\n\t\t23\n\t],\n\t\"./ion-img.entry.js\": [\n\t\t134,\n\t\t45\n\t],\n\t\"./ion-infinite-scroll_2.entry.js\": [\n\t\t135,\n\t\t46\n\t],\n\t\"./ion-input.entry.js\": [\n\t\t136,\n\t\t24\n\t],\n\t\"./ion-item-option_3.entry.js\": [\n\t\t137,\n\t\t25\n\t],\n\t\"./ion-item_8.entry.js\": [\n\t\t138,\n\t\t26\n\t],\n\t\"./ion-loading.entry.js\": [\n\t\t139,\n\t\t27\n\t],\n\t\"./ion-menu_3.entry.js\": [\n\t\t140,\n\t\t28\n\t],\n\t\"./ion-modal.entry.js\": [\n\t\t141,\n\t\t8\n\t],\n\t\"./ion-nav_2.entry.js\": [\n\t\t142,\n\t\t14\n\t],\n\t\"./ion-popover.entry.js\": [\n\t\t143,\n\t\t9\n\t],\n\t\"./ion-progress-bar.entry.js\": [\n\t\t144,\n\t\t29\n\t],\n\t\"./ion-radio_2.entry.js\": [\n\t\t145,\n\t\t30\n\t],\n\t\"./ion-range.entry.js\": [\n\t\t146,\n\t\t31\n\t],\n\t\"./ion-refresher_2.entry.js\": [\n\t\t147,\n\t\t11\n\t],\n\t\"./ion-reorder_2.entry.js\": [\n\t\t148,\n\t\t16\n\t],\n\t\"./ion-ripple-effect.entry.js\": [\n\t\t149,\n\t\t47\n\t],\n\t\"./ion-route_4.entry.js\": [\n\t\t150,\n\t\t32\n\t],\n\t\"./ion-searchbar.entry.js\": [\n\t\t151,\n\t\t33\n\t],\n\t\"./ion-segment_2.entry.js\": [\n\t\t152,\n\t\t34\n\t],\n\t\"./ion-select_3.entry.js\": [\n\t\t153,\n\t\t35\n\t],\n\t\"./ion-slide_2.entry.js\": [\n\t\t154,\n\t\t48\n\t],\n\t\"./ion-spinner.entry.js\": [\n\t\t155,\n\t\t13\n\t],\n\t\"./ion-split-pane.entry.js\": [\n\t\t156,\n\t\t49\n\t],\n\t\"./ion-tab-bar_2.entry.js\": [\n\t\t157,\n\t\t36\n\t],\n\t\"./ion-tab_2.entry.js\": [\n\t\t158,\n\t\t15\n\t],\n\t\"./ion-text.entry.js\": [\n\t\t159,\n\t\t37\n\t],\n\t\"./ion-textarea.entry.js\": [\n\t\t160,\n\t\t38\n\t],\n\t\"./ion-toast.entry.js\": [\n\t\t161,\n\t\t39\n\t],\n\t\"./ion-toggle.entry.js\": [\n\t\t162,\n\t\t12\n\t],\n\t\"./ion-virtual-scroll.entry.js\": [\n\t\t163,\n\t\t50\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 80;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./ion-icon.entry.js\": [\n\t\t164,\n\t\t57\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 82;\nmodule.exports = webpackAsyncContext;"],"sourceRoot":""}