{"version":3,"file":"static/js/3665.795d3374.chunk.js","mappings":"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","sources":["../node_modules/@capacitor-community/bluetooth-le/src/timeout.ts","../node_modules/@capacitor-community/bluetooth-le/src/web.ts"],"sourcesContent":["export async function runWithTimeout(promise: Promise<unknown>, time: number, exception: symbol): Promise<unknown> {\n  let timer: ReturnType<typeof setTimeout>;\n  return Promise.race([\n    promise,\n    new Promise((_, reject) => {\n      timer = setTimeout(() => reject(exception), time);\n    }),\n  ]).finally(() => clearTimeout(timer));\n}\n","import { WebPlugin } from '@capacitor/core';\n\nimport { hexStringToDataView, mapToObject, webUUIDToString } from './conversion';\nimport type {\n  BleCharacteristic,\n  BleCharacteristicProperties,\n  BleDescriptor,\n  BleService,\n  TimeoutOptions,\n  BleDevice,\n  BleServices,\n  BluetoothLePlugin,\n  BooleanResult,\n  DeviceIdOptions,\n  GetConnectedDevicesOptions,\n  GetDevicesOptions,\n  GetDevicesResult,\n  ReadDescriptorOptions,\n  ReadOptions,\n  ReadResult,\n  ReadRssiResult,\n  RequestBleDeviceOptions,\n  ScanResultInternal,\n  WriteOptions,\n  WriteDescriptorOptions,\n  GetMtuResult,\n  RequestConnectionPriorityOptions,\n} from './definitions';\nimport { runWithTimeout } from './timeout';\n\nexport class BluetoothLeWeb extends WebPlugin implements BluetoothLePlugin {\n  private deviceMap = new Map<string, BluetoothDevice>();\n  private discoveredDevices = new Map<string, boolean>();\n  private scan: BluetoothLEScan | null = null;\n  private requestBleDeviceOptions: RequestBleDeviceOptions | undefined;\n  private DEFAULT_CONNECTION_TIMEOUT = 10000;\n\n  async initialize(): Promise<void> {\n    if (typeof navigator === 'undefined' || !navigator.bluetooth) {\n      throw this.unavailable('Web Bluetooth API not available in this browser.');\n    }\n    const isAvailable = await navigator.bluetooth.getAvailability();\n    if (!isAvailable) {\n      throw this.unavailable('No Bluetooth radio available.');\n    }\n  }\n\n  async isEnabled(): Promise<BooleanResult> {\n    // not available on web\n    return { value: true };\n  }\n\n  async enable(): Promise<void> {\n    throw this.unavailable('enable is not available on web.');\n  }\n\n  async disable(): Promise<void> {\n    throw this.unavailable('disable is not available on web.');\n  }\n\n  async startEnabledNotifications(): Promise<void> {\n    // not available on web\n  }\n\n  async stopEnabledNotifications(): Promise<void> {\n    // not available on web\n  }\n\n  async isLocationEnabled(): Promise<BooleanResult> {\n    throw this.unavailable('isLocationEnabled is not available on web.');\n  }\n\n  async openLocationSettings(): Promise<void> {\n    throw this.unavailable('openLocationSettings is not available on web.');\n  }\n\n  async openBluetoothSettings(): Promise<void> {\n    throw this.unavailable('openBluetoothSettings is not available on web.');\n  }\n\n  async openAppSettings(): Promise<void> {\n    throw this.unavailable('openAppSettings is not available on web.');\n  }\n\n  async setDisplayStrings(): Promise<void> {\n    // not available on web\n  }\n\n  async requestDevice(options?: RequestBleDeviceOptions): Promise<BleDevice> {\n    const filters = this.getFilters(options);\n    const device = await navigator.bluetooth.requestDevice({\n      filters: filters.length ? filters : undefined,\n      optionalServices: options?.optionalServices,\n      acceptAllDevices: filters.length === 0,\n    });\n    this.deviceMap.set(device.id, device);\n    const bleDevice = this.getBleDevice(device);\n    return bleDevice;\n  }\n\n  async requestLEScan(options?: RequestBleDeviceOptions): Promise<void> {\n    this.requestBleDeviceOptions = options;\n    const filters = this.getFilters(options);\n    await this.stopLEScan();\n    this.discoveredDevices = new Map<string, boolean>();\n    navigator.bluetooth.removeEventListener(\n      'advertisementreceived',\n      this.onAdvertisementReceivedCallback as EventListener\n    );\n    navigator.bluetooth.addEventListener('advertisementreceived', this.onAdvertisementReceivedCallback);\n    this.scan = await navigator.bluetooth.requestLEScan({\n      filters: filters.length ? filters : undefined,\n      acceptAllAdvertisements: filters.length === 0,\n      keepRepeatedDevices: options?.allowDuplicates,\n    });\n  }\n\n  private onAdvertisementReceivedCallback = this.onAdvertisementReceived.bind(this);\n\n  private onAdvertisementReceived(event: BluetoothAdvertisingEvent): void {\n    const deviceId = event.device.id;\n    this.deviceMap.set(deviceId, event.device);\n    const isNew = !this.discoveredDevices.has(deviceId);\n    if (isNew || this.requestBleDeviceOptions?.allowDuplicates) {\n      this.discoveredDevices.set(deviceId, true);\n      const device = this.getBleDevice(event.device);\n      const result: ScanResultInternal = {\n        device,\n        localName: device.name,\n        rssi: event.rssi,\n        txPower: event.txPower,\n        manufacturerData: mapToObject(event.manufacturerData),\n        serviceData: mapToObject(event.serviceData),\n        uuids: event.uuids?.map(webUUIDToString),\n      };\n      this.notifyListeners('onScanResult', result);\n    }\n  }\n\n  async stopLEScan(): Promise<void> {\n    if (this.scan?.active) {\n      this.scan.stop();\n    }\n    this.scan = null;\n  }\n\n  async getDevices(_options: GetDevicesOptions): Promise<GetDevicesResult> {\n    const devices = await navigator.bluetooth.getDevices();\n    const bleDevices = devices.map((device) => {\n      this.deviceMap.set(device.id, device);\n      const bleDevice = this.getBleDevice(device);\n      return bleDevice;\n    });\n    return { devices: bleDevices };\n  }\n\n  async getConnectedDevices(_options: GetConnectedDevicesOptions): Promise<GetDevicesResult> {\n    const devices = await navigator.bluetooth.getDevices();\n    const bleDevices = devices\n      .filter((device) => {\n        return device.gatt?.connected;\n      })\n      .map((device) => {\n        this.deviceMap.set(device.id, device);\n        const bleDevice = this.getBleDevice(device);\n        return bleDevice;\n      });\n    return { devices: bleDevices };\n  }\n\n  async connect(options: DeviceIdOptions & TimeoutOptions): Promise<void> {\n    const device = this.getDeviceFromMap(options.deviceId);\n    device.removeEventListener('gattserverdisconnected', this.onDisconnectedCallback);\n    device.addEventListener('gattserverdisconnected', this.onDisconnectedCallback);\n    const timeoutError = Symbol();\n    if (device.gatt === undefined) {\n      throw new Error('No gatt server available.');\n    }\n    try {\n      const timeout = options.timeout ?? this.DEFAULT_CONNECTION_TIMEOUT;\n      await runWithTimeout(device.gatt.connect(), timeout, timeoutError);\n    } catch (error) {\n      // cancel pending connect call, does not work yet in chromium because of a bug:\n      // https://bugs.chromium.org/p/chromium/issues/detail?id=684073\n      await device.gatt?.disconnect();\n      if (error === timeoutError) {\n        throw new Error('Connection timeout');\n      } else {\n        throw error;\n      }\n    }\n  }\n\n  private onDisconnectedCallback = this.onDisconnected.bind(this);\n\n  private onDisconnected(event: Event): void {\n    const deviceId = (event.target as BluetoothDevice).id;\n    const key = `disconnected|${deviceId}`;\n    this.notifyListeners(key, null);\n  }\n\n  async createBond(_options: DeviceIdOptions): Promise<void> {\n    throw this.unavailable('createBond is not available on web.');\n  }\n\n  async isBonded(_options: DeviceIdOptions): Promise<BooleanResult> {\n    throw this.unavailable('isBonded is not available on web.');\n  }\n\n  async disconnect(options: DeviceIdOptions): Promise<void> {\n    this.getDeviceFromMap(options.deviceId).gatt?.disconnect();\n  }\n\n  async getServices(options: DeviceIdOptions): Promise<BleServices> {\n    const services = (await this.getDeviceFromMap(options.deviceId).gatt?.getPrimaryServices()) ?? [];\n    const bleServices: BleService[] = [];\n    for (const service of services) {\n      const characteristics = await service.getCharacteristics();\n      const bleCharacteristics: BleCharacteristic[] = [];\n      for (const characteristic of characteristics) {\n        bleCharacteristics.push({\n          uuid: characteristic.uuid,\n          properties: this.getProperties(characteristic),\n          descriptors: await this.getDescriptors(characteristic),\n        });\n      }\n      bleServices.push({ uuid: service.uuid, characteristics: bleCharacteristics });\n    }\n    return { services: bleServices };\n  }\n\n  private async getDescriptors(characteristic: BluetoothRemoteGATTCharacteristic): Promise<BleDescriptor[]> {\n    try {\n      const descriptors = await characteristic.getDescriptors();\n      return descriptors.map((descriptor) => ({\n        uuid: descriptor.uuid,\n      }));\n    } catch {\n      return [];\n    }\n  }\n\n  private getProperties(characteristic: BluetoothRemoteGATTCharacteristic): BleCharacteristicProperties {\n    return {\n      broadcast: characteristic.properties.broadcast,\n      read: characteristic.properties.read,\n      writeWithoutResponse: characteristic.properties.writeWithoutResponse,\n      write: characteristic.properties.write,\n      notify: characteristic.properties.notify,\n      indicate: characteristic.properties.indicate,\n      authenticatedSignedWrites: characteristic.properties.authenticatedSignedWrites,\n      reliableWrite: characteristic.properties.reliableWrite,\n      writableAuxiliaries: characteristic.properties.writableAuxiliaries,\n    };\n  }\n\n  private async getCharacteristic(\n    options: ReadOptions | WriteOptions\n  ): Promise<BluetoothRemoteGATTCharacteristic | undefined> {\n    const service = await this.getDeviceFromMap(options.deviceId).gatt?.getPrimaryService(options?.service);\n    return service?.getCharacteristic(options?.characteristic);\n  }\n\n  private async getDescriptor(\n    options: ReadDescriptorOptions | WriteDescriptorOptions\n  ): Promise<BluetoothRemoteGATTDescriptor | undefined> {\n    const characteristic = await this.getCharacteristic(options);\n    return characteristic?.getDescriptor(options?.descriptor);\n  }\n\n  async discoverServices(_options: DeviceIdOptions): Promise<void> {\n    throw this.unavailable('discoverServices is not available on web.');\n  }\n\n  async getMtu(_options: DeviceIdOptions): Promise<GetMtuResult> {\n    throw this.unavailable('getMtu is not available on web.');\n  }\n\n  async requestConnectionPriority(_options: RequestConnectionPriorityOptions): Promise<void> {\n    throw this.unavailable('requestConnectionPriority is not available on web.');\n  }\n\n  async readRssi(_options: DeviceIdOptions): Promise<ReadRssiResult> {\n    throw this.unavailable('readRssi is not available on web.');\n  }\n\n  async read(options: ReadOptions): Promise<ReadResult> {\n    const characteristic = await this.getCharacteristic(options);\n    const value = await characteristic?.readValue();\n    return { value };\n  }\n\n  async write(options: WriteOptions): Promise<void> {\n    const characteristic = await this.getCharacteristic(options);\n    let dataView: DataView;\n    if (typeof options.value === 'string') {\n      dataView = hexStringToDataView(options.value);\n    } else {\n      dataView = options.value;\n    }\n    await characteristic?.writeValueWithResponse(dataView);\n  }\n\n  async writeWithoutResponse(options: WriteOptions): Promise<void> {\n    const characteristic = await this.getCharacteristic(options);\n    let dataView: DataView;\n    if (typeof options.value === 'string') {\n      dataView = hexStringToDataView(options.value);\n    } else {\n      dataView = options.value;\n    }\n    await characteristic?.writeValueWithoutResponse(dataView);\n  }\n\n  async readDescriptor(options: ReadDescriptorOptions): Promise<ReadResult> {\n    const descriptor = await this.getDescriptor(options);\n    const value = await descriptor?.readValue();\n    return { value };\n  }\n\n  async writeDescriptor(options: WriteDescriptorOptions): Promise<void> {\n    const descriptor = await this.getDescriptor(options);\n    let dataView: DataView;\n    if (typeof options.value === 'string') {\n      dataView = hexStringToDataView(options.value);\n    } else {\n      dataView = options.value;\n    }\n    await descriptor?.writeValue(dataView);\n  }\n\n  async startNotifications(options: ReadOptions): Promise<void> {\n    const characteristic = await this.getCharacteristic(options);\n    characteristic?.removeEventListener('characteristicvaluechanged', this.onCharacteristicValueChangedCallback);\n    characteristic?.addEventListener('characteristicvaluechanged', this.onCharacteristicValueChangedCallback);\n    await characteristic?.startNotifications();\n  }\n\n  private onCharacteristicValueChangedCallback = this.onCharacteristicValueChanged.bind(this);\n\n  private onCharacteristicValueChanged(event: Event): void {\n    const characteristic = event.target as BluetoothRemoteGATTCharacteristic;\n    const key = `notification|${characteristic.service?.device.id}|${characteristic.service?.uuid}|${characteristic.uuid}`;\n    this.notifyListeners(key, {\n      value: characteristic.value,\n    });\n  }\n\n  async stopNotifications(options: ReadOptions): Promise<void> {\n    const characteristic = await this.getCharacteristic(options);\n    await characteristic?.stopNotifications();\n  }\n\n  private getFilters(options?: RequestBleDeviceOptions): BluetoothLEScanFilter[] {\n    const filters: BluetoothLEScanFilter[] = [];\n    for (const service of options?.services ?? []) {\n      filters.push({\n        services: [service],\n        name: options?.name,\n        namePrefix: options?.namePrefix,\n      });\n    }\n    if ((options?.name || options?.namePrefix) && filters.length === 0) {\n      filters.push({\n        name: options.name,\n        namePrefix: options.namePrefix,\n      });\n    }\n    return filters;\n  }\n\n  private getDeviceFromMap(deviceId: string): BluetoothDevice {\n    const device = this.deviceMap.get(deviceId);\n    if (device === undefined) {\n      throw new Error('Device not found. Call \"requestDevice\", \"requestLEScan\" or \"getDevices\" first.');\n    }\n    return device;\n  }\n\n  private getBleDevice(device: BluetoothDevice): BleDevice {\n    const bleDevice: BleDevice = {\n      deviceId: device.id,\n      // use undefined instead of null if name is not available\n      name: device.name ?? undefined,\n    };\n    return bleDevice;\n  }\n}\n"],"names":["runWithTimeout","_x","_x2","_x3","_runWithTimeout","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","promise","time","exception","timer","wrap","_context","prev","next","abrupt","Promise","race","_","reject","setTimeout","finally","clearTimeout","stop","BluetoothLeWeb","_WebPlugin","_inherits","_super","_createSuper","_this","_classCallCheck","deviceMap","Map","discoveredDevices","scan","DEFAULT_CONNECTION_TIMEOUT","onAdvertisementReceivedCallback","onAdvertisementReceived","bind","_assertThisInitialized","onDisconnectedCallback","onDisconnected","onCharacteristicValueChangedCallback","onCharacteristicValueChanged","_createClass","key","value","_initialize","navigator","bluetooth","this","unavailable","getAvailability","sent","_isEnabled","_callee2","_context2","_enable","_callee3","_context3","_disable","_callee4","_context4","_startEnabledNotifications","_callee5","_context5","_stopEnabledNotifications","_callee6","_context6","_isLocationEnabled","_callee7","_context7","_openLocationSettings","_callee8","_context8","_openBluetoothSettings","_callee9","_context9","_openAppSettings","_callee10","_context10","_setDisplayStrings","_callee11","_context11","_requestDevice","_callee12","options","filters","device","bleDevice","_context12","getFilters","requestDevice","length","undefined","optionalServices","acceptAllDevices","set","id","getBleDevice","_requestLEScan","_callee13","_context13","requestBleDeviceOptions","stopLEScan","removeEventListener","addEventListener","requestLEScan","acceptAllAdvertisements","keepRepeatedDevices","allowDuplicates","event","deviceId","has","_a","result","localName","name","rssi","txPower","manufacturerData","mapToObject","serviceData","uuids","_b","map","webUUIDToString","notifyListeners","_stopLEScan","_callee14","_context14","active","_getDevices","_callee15","_options","devices","bleDevices","_this2","_context15","getDevices","_getConnectedDevices","_callee16","_this3","_context16","filter","gatt","connected","_x4","_connect","_callee17","timeoutError","timeout","_context17","getDeviceFromMap","Symbol","Error","connect","t0","disconnect","_x5","target","concat","_createBond","_callee18","_context18","_x6","_isBonded","_callee19","_context19","_x7","_disconnect","_callee20","_context20","_x8","_getServices","_callee21","services","bleServices","_iterator","_step","service","characteristics","bleCharacteristics","_iterator2","_step2","characteristic","_context21","getPrimaryServices","t1","t2","_createForOfIteratorHelper","s","n","done","getCharacteristics","t3","t4","uuid","t5","getProperties","getDescriptors","t6","t7","properties","descriptors","push","call","t8","e","f","finish","t9","_x9","_getDescriptors","_callee22","_context22","descriptor","_x10","broadcast","read","writeWithoutResponse","write","notify","indicate","authenticatedSignedWrites","reliableWrite","writableAuxiliaries","_getCharacteristic","_callee23","_context23","getPrimaryService","getCharacteristic","_x11","_getDescriptor","_callee24","_context24","getDescriptor","_x12","_discoverServices","_callee25","_context25","_x13","_getMtu","_callee26","_context26","_x14","_requestConnectionPriority","_callee27","_context27","_x15","_readRssi","_callee28","_context28","_x16","_read","_callee29","_context29","readValue","_x17","_write","_callee30","dataView","_context30","hexStringToDataView","writeValueWithResponse","_x18","_writeWithoutResponse","_callee31","_context31","writeValueWithoutResponse","_x19","_readDescriptor","_callee32","_context32","_x20","_writeDescriptor","_callee33","_context33","writeValue","_x21","_startNotifications","_callee34","_context34","startNotifications","_x22","_stopNotifications","_callee35","_context35","stopNotifications","_x23","_step3","_iterator3","namePrefix","err","get","WebPlugin"],"sourceRoot":""}